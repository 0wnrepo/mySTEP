

Terminals which are not used:

   AT_THROW


State 163 contains 4 shift/reduce conflicts.
State 167 contains 1 shift/reduce conflict.
State 168 contains 2 shift/reduce conflicts.
State 172 contains 1 shift/reduce conflict.
State 382 contains 1 shift/reduce conflict.
State 391 contains 1 shift/reduce conflict.
State 403 contains 1 shift/reduce conflict.
State 404 contains 1 shift/reduce conflict.
State 405 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 414 contains 1 shift/reduce conflict.
State 478 contains 1 shift/reduce conflict.
State 484 contains 1 shift/reduce conflict.
State 494 contains 1 shift/reduce conflict.
State 497 contains 1 shift/reduce conflict.

Grammar
rule 1    selector_component -> IDENTIFIER ':'
rule 2    selector_component -> ':'
rule 3    selector_with_arguments -> IDENTIFIER
rule 4    selector_with_arguments -> IDENTIFIER ':' expression
rule 5    selector_with_arguments -> selector_with_arguments selector_component expression
rule 6    selector_with_arguments -> selector_with_arguments ',' ELLIPSIS
rule 7    struct_component_expression -> conditional_expression
rule 8    struct_component_expression -> struct_component_expression conditional_expression
rule 9    selector -> IDENTIFIER
rule 10   selector -> ':'
rule 11   selector -> IDENTIFIER ':'
rule 12   selector -> selector ':'
rule 13   primary_expression -> IDENTIFIER
rule 14   primary_expression -> CONSTANT
rule 15   primary_expression -> STRING_LITERAL
rule 16   primary_expression -> '(' expression ')'
rule 17   primary_expression -> AT_STRING_LITERAL
rule 18   primary_expression -> '[' expression selector_with_arguments ']'
rule 19   primary_expression -> AT_SELECTOR '(' selector ')'
rule 20   primary_expression -> AT_ENCODE '(' type_name ')'
rule 21   postfix_expression -> primary_expression
rule 22   postfix_expression -> postfix_expression '[' expression ']'
rule 23   postfix_expression -> postfix_expression '(' ')'
rule 24   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 25   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 26   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 27   postfix_expression -> postfix_expression INC_OP
rule 28   postfix_expression -> postfix_expression DEC_OP
rule 29   argument_expression_list -> assignment_expression
rule 30   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 31   unary_expression -> postfix_expression
rule 32   unary_expression -> INC_OP unary_expression
rule 33   unary_expression -> DEC_OP unary_expression
rule 34   unary_expression -> unary_operator cast_expression
rule 35   unary_expression -> SIZEOF unary_expression
rule 36   unary_expression -> SIZEOF '(' type_name ')'
rule 37   unary_operator -> '&'
rule 38   unary_operator -> '*'
rule 39   unary_operator -> '+'
rule 40   unary_operator -> '-'
rule 41   unary_operator -> '~'
rule 42   unary_operator -> '!'
rule 43   cast_expression -> unary_expression
rule 44   cast_expression -> '(' type_name ')' cast_expression
rule 45   cast_expression -> '(' type_name ')' '{' struct_component_expression '}'
rule 46   multiplicative_expression -> cast_expression
rule 47   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 48   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 49   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 50   additive_expression -> multiplicative_expression
rule 51   additive_expression -> additive_expression '+' multiplicative_expression
rule 52   additive_expression -> additive_expression '-' multiplicative_expression
rule 53   shift_expression -> additive_expression
rule 54   shift_expression -> shift_expression LEFT_OP additive_expression
rule 55   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 56   relational_expression -> shift_expression
rule 57   relational_expression -> relational_expression '<' shift_expression
rule 58   relational_expression -> relational_expression '>' shift_expression
rule 59   relational_expression -> relational_expression LE_OP shift_expression
rule 60   relational_expression -> relational_expression GE_OP shift_expression
rule 61   equality_expression -> relational_expression
rule 62   equality_expression -> equality_expression EQ_OP relational_expression
rule 63   equality_expression -> equality_expression NE_OP relational_expression
rule 64   and_expression -> equality_expression
rule 65   and_expression -> and_expression '&' equality_expression
rule 66   exclusive_or_expression -> and_expression
rule 67   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 68   inclusive_or_expression -> exclusive_or_expression
rule 69   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 70   logical_and_expression -> inclusive_or_expression
rule 71   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 72   logical_or_expression -> logical_and_expression
rule 73   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 74   conditional_expression -> logical_or_expression
rule 75   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 76   assignment_expression -> conditional_expression
rule 77   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 78   assignment_operator -> '='
rule 79   assignment_operator -> MUL_ASSIGN
rule 80   assignment_operator -> DIV_ASSIGN
rule 81   assignment_operator -> MOD_ASSIGN
rule 82   assignment_operator -> ADD_ASSIGN
rule 83   assignment_operator -> SUB_ASSIGN
rule 84   assignment_operator -> LEFT_ASSIGN
rule 85   assignment_operator -> RIGHT_ASSIGN
rule 86   assignment_operator -> AND_ASSIGN
rule 87   assignment_operator -> XOR_ASSIGN
rule 88   assignment_operator -> OR_ASSIGN
rule 89   expression -> assignment_expression
rule 90   expression -> expression ',' assignment_expression
rule 91   constant_expression -> conditional_expression
rule 92   class_name_list -> IDENTIFIER
rule 93   class_name_list -> class_name_list ',' IDENTIFIER
rule 94   class_with_superclass -> IDENTIFIER
rule 95   class_with_superclass -> IDENTIFIER ':' IDENTIFIER
rule 96   category_name -> IDENTIFIER
rule 97   inherited_protocols -> protocol_list
rule 98   class_name_declaration -> class_with_superclass
rule 99   class_name_declaration -> class_with_superclass '<' inherited_protocols '>'
rule 100  class_name_declaration -> class_with_superclass '(' category_name ')'
rule 101  class_name_declaration -> class_with_superclass '<' inherited_protocols '>' '(' category_name ')'
rule 102  class_or_instance_method_specifier -> '+'
rule 103  class_or_instance_method_specifier -> '-'
rule 104  do_atribute_specifier -> ONEWAY
rule 105  do_atribute_specifier -> IN
rule 106  do_atribute_specifier -> OUT
rule 107  do_atribute_specifier -> INOUT
rule 108  do_atribute_specifier -> BYREF
rule 109  do_atribute_specifier -> BYCOPY
rule 110  objc_declaration_specifiers -> do_atribute_specifier objc_declaration_specifiers
rule 111  objc_declaration_specifiers -> type_name
rule 112  selector_argument_declaration -> '(' objc_declaration_specifiers ')' IDENTIFIER
rule 113  selector_with_argument_declaration -> IDENTIFIER
rule 114  selector_with_argument_declaration -> IDENTIFIER ':' selector_argument_declaration
rule 115  selector_with_argument_declaration -> selector_with_argument_declaration selector_component selector_argument_declaration
rule 116  selector_with_argument_declaration -> selector_with_argument_declaration ',' ELLIPSIS
rule 117  method_declaration -> class_or_instance_method_specifier '(' objc_declaration_specifiers ')' selector_with_argument_declaration
rule 118  method_declaration_list -> method_declaration ';'
rule 119  method_declaration_list -> AT_OPTIONAL method_declaration ';'
rule 120  method_declaration_list -> AT_REQUIRED method_declaration ';'
rule 121  method_declaration_list -> method_declaration_list method_declaration ';'
rule 122  ivar_declaration_list -> '{' struct_declaration_list '}'
rule 123  class_implementation -> IDENTIFIER
rule 124  class_implementation -> IDENTIFIER '(' category_name ')'
rule 125  method_implementation -> method_declaration compound_statement
rule 126  method_implementation -> method_declaration ';' compound_statement
rule 127  method_implementation_list -> method_implementation
rule 128  method_implementation_list -> method_implementation_list method_implementation
rule 129  objc_declaration -> AT_CLASS class_name_list ';'
rule 130  objc_declaration -> AT_PROTOCOL class_name_declaration AT_END
rule 131  objc_declaration -> AT_PROTOCOL class_name_declaration method_declaration_list AT_END
rule 132  objc_declaration -> AT_INTERFACE class_name_declaration AT_END
rule 133  objc_declaration -> AT_INTERFACE class_name_declaration ivar_declaration_list method_declaration_list AT_END
rule 134  objc_declaration -> AT_INTERFACE class_name_declaration ivar_declaration_list AT_END
rule 135  objc_declaration -> AT_IMPLEMENTATION class_implementation AT_END
rule 136  objc_declaration -> AT_IMPLEMENTATION class_implementation ivar_declaration_list AT_END
rule 137  objc_declaration -> AT_IMPLEMENTATION class_implementation method_implementation_list AT_END
rule 138  objc_declaration -> AT_IMPLEMENTATION class_implementation ivar_declaration_list method_implementation_list AT_END
rule 139  declaration -> declaration_specifiers ';'
rule 140  declaration -> declaration_specifiers init_declarator_list ';'
rule 141  declaration -> objc_declaration
rule 142  declaration_specifiers -> storage_class_specifier
rule 143  declaration_specifiers -> storage_class_specifier declaration_specifiers
rule 144  declaration_specifiers -> type_specifier
rule 145  declaration_specifiers -> type_specifier declaration_specifiers
rule 146  declaration_specifiers -> type_qualifier
rule 147  declaration_specifiers -> type_qualifier declaration_specifiers
rule 148  init_declarator_list -> init_declarator
rule 149  init_declarator_list -> init_declarator_list ',' init_declarator
rule 150  init_declarator -> declarator
rule 151  init_declarator -> declarator '=' initializer
rule 152  storage_class_specifier -> TYPEDEF
rule 153  storage_class_specifier -> EXTERN
rule 154  storage_class_specifier -> STATIC
rule 155  storage_class_specifier -> AUTO
rule 156  storage_class_specifier -> REGISTER
rule 157  protocol_list -> IDENTIFIER
rule 158  protocol_list -> protocol_list ',' IDENTIFIER
rule 159  type_specifier -> VOID
rule 160  type_specifier -> CHAR
rule 161  type_specifier -> SHORT
rule 162  type_specifier -> INT
rule 163  type_specifier -> LONG
rule 164  type_specifier -> FLOAT
rule 165  type_specifier -> DOUBLE
rule 166  type_specifier -> SIGNED
rule 167  type_specifier -> UNSIGNED
rule 168  type_specifier -> struct_or_union_specifier
rule 169  type_specifier -> enum_specifier
rule 170  type_specifier -> TYPE_NAME
rule 171  type_specifier -> ID
rule 172  type_specifier -> ID '<' protocol_list '>'
rule 173  type_specifier -> SEL
rule 174  type_specifier -> BOOL
rule 175  type_specifier -> UNICHAR
rule 176  type_specifier -> CLASS
rule 177  struct_or_union_specifier -> struct_or_union IDENTIFIER '{' struct_declaration_list '}'
rule 178  struct_or_union_specifier -> struct_or_union '{' struct_declaration_list '}'
rule 179  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 180  struct_or_union -> STRUCT
rule 181  struct_or_union -> UNION
rule 182  struct_declaration_list -> struct_declaration
rule 183  struct_declaration_list -> struct_declaration_list struct_declaration
rule 184  property_attributes_list -> IDENTIFIER
rule 185  property_attributes_list -> IDENTIFIER ',' property_attributes_list
rule 186  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 187  struct_declaration -> AT_PRIVATE specifier_qualifier_list struct_declarator_list ';'
rule 188  struct_declaration -> AT_PUBLIC specifier_qualifier_list struct_declarator_list ';'
rule 189  struct_declaration -> AT_PROTECTED specifier_qualifier_list struct_declarator_list ';'
rule 190  struct_declaration -> AT_PROPERTY '(' property_attributes_list ')' specifier_qualifier_list struct_declarator_list ';'
rule 191  struct_declaration -> AT_PROPERTY specifier_qualifier_list struct_declarator_list ';'
rule 192  struct_declaration -> AT_SYNTHESIZE ivar_list ';'
rule 193  ivar_list -> ivar_list IDENTIFIER
rule 194  ivar_list -> IDENTIFIER
rule 195  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 196  specifier_qualifier_list -> type_specifier
rule 197  specifier_qualifier_list -> type_qualifier specifier_qualifier_list
rule 198  specifier_qualifier_list -> type_qualifier
rule 199  struct_declarator_list -> struct_declarator
rule 200  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 201  struct_declarator -> declarator
rule 202  struct_declarator -> ':' constant_expression
rule 203  struct_declarator -> declarator ':' constant_expression
rule 204  enum_specifier -> ENUM '{' enumerator_list '}'
rule 205  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list '}'
rule 206  enum_specifier -> ENUM IDENTIFIER
rule 207  enumerator_list -> enumerator
rule 208  enumerator_list -> enumerator_list ',' enumerator
rule 209  enumerator -> IDENTIFIER
rule 210  enumerator -> IDENTIFIER '=' constant_expression
rule 211  type_qualifier -> CONST
rule 212  type_qualifier -> VOLATILE
rule 213  type_qualifier -> WEAK
rule 214  type_qualifier -> STRONG
rule 215  declarator -> pointer direct_declarator
rule 216  declarator -> direct_declarator
rule 217  direct_declarator -> IDENTIFIER
rule 218  direct_declarator -> '(' declarator ')'
rule 219  direct_declarator -> direct_declarator '[' constant_expression ']'
rule 220  direct_declarator -> direct_declarator '[' ']'
rule 221  direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 222  direct_declarator -> direct_declarator '(' identifier_list ')'
rule 223  direct_declarator -> direct_declarator '(' ')'
rule 224  pointer -> '*'
rule 225  pointer -> '*' type_qualifier_list
rule 226  pointer -> '*' pointer
rule 227  pointer -> '*' type_qualifier_list pointer
rule 228  type_qualifier_list -> type_qualifier
rule 229  type_qualifier_list -> type_qualifier_list type_qualifier
rule 230  parameter_type_list -> parameter_list
rule 231  parameter_type_list -> parameter_list ',' ELLIPSIS
rule 232  parameter_list -> parameter_declaration
rule 233  parameter_list -> parameter_list ',' parameter_declaration
rule 234  parameter_declaration -> declaration_specifiers declarator
rule 235  parameter_declaration -> declaration_specifiers abstract_declarator
rule 236  parameter_declaration -> declaration_specifiers
rule 237  identifier_list -> IDENTIFIER
rule 238  identifier_list -> identifier_list ',' IDENTIFIER
rule 239  type_name -> specifier_qualifier_list
rule 240  type_name -> specifier_qualifier_list abstract_declarator
rule 241  abstract_declarator -> pointer
rule 242  abstract_declarator -> direct_abstract_declarator
rule 243  abstract_declarator -> pointer direct_abstract_declarator
rule 244  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 245  direct_abstract_declarator -> '[' ']'
rule 246  direct_abstract_declarator -> '[' constant_expression ']'
rule 247  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 248  direct_abstract_declarator -> direct_abstract_declarator '[' constant_expression ']'
rule 249  direct_abstract_declarator -> '(' ')'
rule 250  direct_abstract_declarator -> '(' parameter_type_list ')'
rule 251  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 252  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_type_list ')'
rule 253  initializer -> assignment_expression
rule 254  initializer -> '{' initializer_list '}'
rule 255  initializer -> '{' initializer_list ',' '}'
rule 256  initializer_list -> initializer
rule 257  initializer_list -> initializer_list ',' initializer
rule 258  statement -> labeled_statement
rule 259  statement -> compound_statement
rule 260  statement -> expression_statement
rule 261  statement -> selection_statement
rule 262  statement -> iteration_statement
rule 263  statement -> jump_statement
rule 264  statement -> AT_CATCH
rule 265  statement -> AT_TRY
rule 266  labeled_statement -> IDENTIFIER ':' statement
rule 267  labeled_statement -> CASE constant_expression ':' statement
rule 268  labeled_statement -> DEFAULT ':' statement
rule 269  compound_statement -> '{' '}'
rule 270  compound_statement -> '{' statement_list '}'
rule 271  compound_statement -> '{' declaration_list '}'
rule 272  compound_statement -> '{' declaration_list statement_list '}'
rule 273  declaration_list -> declaration
rule 274  declaration_list -> declaration_list declaration
rule 275  statement_list -> statement
rule 276  statement_list -> statement_list statement
rule 277  expression_statement -> ';'
rule 278  expression_statement -> expression ';'
rule 279  selection_statement -> IF '(' expression ')' statement
rule 280  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 281  selection_statement -> SWITCH '(' expression ')' statement
rule 282  iteration_statement -> WHILE '(' expression ')' statement
rule 283  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 284  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 285  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 286  iteration_statement -> FOR '(' declaration expression_statement expression ')' statement
rule 287  iteration_statement -> FOR '(' declaration IN expression ')' statement
rule 288  jump_statement -> GOTO IDENTIFIER ';'
rule 289  jump_statement -> CONTINUE ';'
rule 290  jump_statement -> BREAK ';'
rule 291  jump_statement -> RETURN ';'
rule 292  jump_statement -> RETURN expression ';'
rule 293  translation_unit -> external_declaration
rule 294  translation_unit -> translation_unit external_declaration
rule 295  external_declaration -> function_definition
rule 296  external_declaration -> declaration
rule 297  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 298  function_definition -> declaration_specifiers declarator compound_statement
rule 299  function_definition -> declarator declaration_list compound_statement
rule 300  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 42
'%' (37) 49
'&' (38) 37 65
'(' (40) 16 19 20 23 24 36 44 45 100 101 112 117 124 190 218 221 222
    223 244 249 250 251 252 279 280 281 282 283 284 285 286 287
')' (41) 16 19 20 23 24 36 44 45 100 101 112 117 124 190 218 221 222
    223 244 249 250 251 252 279 280 281 282 283 284 285 286 287
'*' (42) 38 47 224 225 226 227
'+' (43) 39 51 102
',' (44) 6 30 90 93 116 149 158 185 200 208 231 233 238 255 257
'-' (45) 40 52 103
'.' (46) 25
'/' (47) 48
':' (58) 1 2 4 10 11 12 75 95 114 202 203 266 267 268
';' (59) 118 119 120 121 126 129 139 140 186 187 188 189 190 191 192
    277 278 283 288 289 290 291 292
'<' (60) 57 99 101 172
'=' (61) 78 151 210
'>' (62) 58 99 101 172
'?' (63) 75
'[' (91) 18 22 219 220 245 246 247 248
']' (93) 18 22 219 220 245 246 247 248
'^' (94) 67
'{' (123) 45 122 177 178 204 205 254 255 269 270 271 272
'|' (124) 69
'}' (125) 45 122 177 178 204 205 254 255 269 270 271 272
'~' (126) 41
error (256)
IDENTIFIER (257) 1 3 4 9 11 13 25 26 92 93 94 95 96 112 113 114 123
    124 157 158 177 179 184 185 193 194 205 206 209 210 217 237 238
    266 288
CONSTANT (258) 14
STRING_LITERAL (259) 15
SIZEOF (260) 35 36
PTR_OP (261) 26
INC_OP (262) 27 32
DEC_OP (263) 28 33
LEFT_OP (264) 54
RIGHT_OP (265) 55
LE_OP (266) 59
GE_OP (267) 60
EQ_OP (268) 62
NE_OP (269) 63
AND_OP (270) 71
OR_OP (271) 73
MUL_ASSIGN (272) 79
DIV_ASSIGN (273) 80
MOD_ASSIGN (274) 81
ADD_ASSIGN (275) 82
SUB_ASSIGN (276) 83
LEFT_ASSIGN (277) 84
RIGHT_ASSIGN (278) 85
AND_ASSIGN (279) 86
XOR_ASSIGN (280) 87
OR_ASSIGN (281) 88
TYPE_NAME (282) 170
TYPEDEF (283) 152
EXTERN (284) 153
STATIC (285) 154
AUTO (286) 155
REGISTER (287) 156
CHAR (288) 160
SHORT (289) 161
INT (290) 162
LONG (291) 163
SIGNED (292) 166
UNSIGNED (293) 167
FLOAT (294) 164
DOUBLE (295) 165
CONST (296) 211
VOLATILE (297) 212
VOID (298) 159
STRUCT (299) 180
UNION (300) 181
ENUM (301) 204 205 206
ELLIPSIS (302) 6 116 231
CASE (303) 267
DEFAULT (304) 268
IF (305) 279 280
ELSE (306) 280
SWITCH (307) 281
WHILE (308) 282 283
DO (309) 283
FOR (310) 284 285 286 287
GOTO (311) 288
CONTINUE (312) 289
BREAK (313) 290
RETURN (314) 291 292
AT_STRING_LITERAL (315) 17
ID (316) 171 172
SEL (317) 173
BOOL (318) 174
UNICHAR (319) 175
CLASS (320) 176
AT_CLASS (321) 129
AT_PROTOCOL (322) 130 131
AT_INTERFACE (323) 132 133 134
AT_IMPLEMENTATION (324) 135 136 137 138
AT_END (325) 130 131 132 133 134 135 136 137 138
AT_PRIVATE (326) 187
AT_PUBLIC (327) 188
AT_PROTECTED (328) 189
AT_SELECTOR (329) 19
AT_ENCODE (330) 20
AT_CATCH (331) 264
AT_THROW (332)
AT_TRY (333) 265
IN (334) 105 287
OUT (335) 106
INOUT (336) 107
BYREF (337) 108
BYCOPY (338) 109
ONEWAY (339) 104
AT_PROPERTY (340) 190 191
AT_SYNTHESIZE (341) 192
AT_OPTIONAL (342) 119
AT_REQUIRED (343) 120
WEAK (344) 213
STRONG (345) 214

Nonterminals, with rules where they appear

selector_component (116)
    on left: 1 2, on right: 5 115
selector_with_arguments (117)
    on left: 3 4 5 6, on right: 5 6 18
struct_component_expression (118)
    on left: 7 8, on right: 8 45
selector (119)
    on left: 9 10 11 12, on right: 12 19
primary_expression (120)
    on left: 13 14 15 16 17 18 19 20, on right: 21
postfix_expression (121)
    on left: 21 22 23 24 25 26 27 28, on right: 22 23 24 25 26 27 28
    31
argument_expression_list (122)
    on left: 29 30, on right: 24 30
unary_expression (123)
    on left: 31 32 33 34 35 36, on right: 32 33 35 43 77
unary_operator (124)
    on left: 37 38 39 40 41 42, on right: 34
cast_expression (125)
    on left: 43 44 45, on right: 34 44 46 47 48 49
multiplicative_expression (126)
    on left: 46 47 48 49, on right: 47 48 49 50 51 52
additive_expression (127)
    on left: 50 51 52, on right: 51 52 53 54 55
shift_expression (128)
    on left: 53 54 55, on right: 54 55 56 57 58 59 60
relational_expression (129)
    on left: 56 57 58 59 60, on right: 57 58 59 60 61 62 63
equality_expression (130)
    on left: 61 62 63, on right: 62 63 64 65
and_expression (131)
    on left: 64 65, on right: 65 66 67
exclusive_or_expression (132)
    on left: 66 67, on right: 67 68 69
inclusive_or_expression (133)
    on left: 68 69, on right: 69 70 71
logical_and_expression (134)
    on left: 70 71, on right: 71 72 73
logical_or_expression (135)
    on left: 72 73, on right: 73 74 75
conditional_expression (136)
    on left: 74 75, on right: 7 8 75 76 91
assignment_expression (137)
    on left: 76 77, on right: 29 30 77 89 90 253
assignment_operator (138)
    on left: 78 79 80 81 82 83 84 85 86 87 88, on right: 77
expression (139)
    on left: 89 90, on right: 4 5 16 18 22 75 90 278 279 280 281 282
    283 285 286 287 292
constant_expression (140)
    on left: 91, on right: 202 203 210 219 246 248 267
class_name_list (141)
    on left: 92 93, on right: 93 129
class_with_superclass (142)
    on left: 94 95, on right: 98 99 100 101
category_name (143)
    on left: 96, on right: 100 101 124
inherited_protocols (144)
    on left: 97, on right: 99 101
class_name_declaration (145)
    on left: 98 99 100 101, on right: 130 131 132 133 134
class_or_instance_method_specifier (146)
    on left: 102 103, on right: 117
do_atribute_specifier (147)
    on left: 104 105 106 107 108 109, on right: 110
objc_declaration_specifiers (148)
    on left: 110 111, on right: 110 112 117
selector_argument_declaration (149)
    on left: 112, on right: 114 115
selector_with_argument_declaration (150)
    on left: 113 114 115 116, on right: 115 116 117
method_declaration (151)
    on left: 117, on right: 118 119 120 121 125 126
method_declaration_list (152)
    on left: 118 119 120 121, on right: 121 131 133
ivar_declaration_list (153)
    on left: 122, on right: 133 134 136 138
class_implementation (154)
    on left: 123 124, on right: 135 136 137 138
method_implementation (155)
    on left: 125 126, on right: 127 128
method_implementation_list (156)
    on left: 127 128, on right: 128 137 138
objc_declaration (157)
    on left: 129 130 131 132 133 134 135 136 137 138,
    on right: 141
declaration (158)
    on left: 139 140 141, on right: 273 274 286 287 296
declaration_specifiers (159)
    on left: 142 143 144 145 146 147, on right: 139 140 143 145 147
    234 235 236 297 298
init_declarator_list (160)
    on left: 148 149, on right: 140 149
init_declarator (161)
    on left: 150 151, on right: 148 149
storage_class_specifier (162)
    on left: 152 153 154 155 156, on right: 142 143
protocol_list (163)
    on left: 157 158, on right: 97 158 172
type_specifier (164)
    on left: 159 160 161 162 163 164 165 166 167 168 169 170 171 172
    173 174 175 176, on right: 144 145 195 196
struct_or_union_specifier (165)
    on left: 177 178 179, on right: 168
struct_or_union (166)
    on left: 180 181, on right: 177 178 179
struct_declaration_list (167)
    on left: 182 183, on right: 122 177 178 183
property_attributes_list (168)
    on left: 184 185, on right: 185 190
struct_declaration (169)
    on left: 186 187 188 189 190 191 192, on right: 182 183
ivar_list (170)
    on left: 193 194, on right: 192 193
specifier_qualifier_list (171)
    on left: 195 196 197 198, on right: 186 187 188 189 190 191 195
    197 239 240
struct_declarator_list (172)
    on left: 199 200, on right: 186 187 188 189 190 191 200
struct_declarator (173)
    on left: 201 202 203, on right: 199 200
enum_specifier (174)
    on left: 204 205 206, on right: 169
enumerator_list (175)
    on left: 207 208, on right: 204 205 208
enumerator (176)
    on left: 209 210, on right: 207 208
type_qualifier (177)
    on left: 211 212 213 214, on right: 146 147 197 198 228 229
declarator (178)
    on left: 215 216, on right: 150 151 201 203 218 234 297 298 299
    300
direct_declarator (179)
    on left: 217 218 219 220 221 222 223, on right: 215 216 219 220
    221 222 223
pointer (180)
    on left: 224 225 226 227, on right: 215 226 227 241 243
type_qualifier_list (181)
    on left: 228 229, on right: 225 227 229
parameter_type_list (182)
    on left: 230 231, on right: 221 250 252
parameter_list (183)
    on left: 232 233, on right: 230 231 233
parameter_declaration (184)
    on left: 234 235 236, on right: 232 233
identifier_list (185)
    on left: 237 238, on right: 222 238
type_name (186)
    on left: 239 240, on right: 20 36 44 45 111
abstract_declarator (187)
    on left: 241 242 243, on right: 235 240 244
direct_abstract_declarator (188)
    on left: 244 245 246 247 248 249 250 251 252, on right: 242 243
    247 248 251 252
initializer (189)
    on left: 253 254 255, on right: 151 256 257
initializer_list (190)
    on left: 256 257, on right: 254 255 257
statement (191)
    on left: 258 259 260 261 262 263 264 265, on right: 266 267 268
    275 276 279 280 281 282 283 284 285 286 287
labeled_statement (192)
    on left: 266 267 268, on right: 258
compound_statement (193)
    on left: 269 270 271 272, on right: 125 126 259 297 298 299 300
declaration_list (194)
    on left: 273 274, on right: 271 272 274 297 299
statement_list (195)
    on left: 275 276, on right: 270 272 276
expression_statement (196)
    on left: 277 278, on right: 260 284 285 286
selection_statement (197)
    on left: 279 280 281, on right: 261
iteration_statement (198)
    on left: 282 283 284 285 286 287, on right: 262
jump_statement (199)
    on left: 288 289 290 291 292, on right: 263
translation_unit (200)
    on left: 293 294, on right: 294
external_declaration (201)
    on left: 295 296, on right: 293 294
function_definition (202)
    on left: 297 298 299 300, on right: 295


state 0

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    objc_declaration	go to state 35
    declaration	go to state 36
    declaration_specifiers	go to state 37
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    declarator	go to state 44
    direct_declarator	go to state 45
    pointer	go to state 46
    translation_unit	go to state 47
    external_declaration	go to state 48
    function_definition	go to state 49



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 217)

    $default	reduce using rule 217 (direct_declarator)



state 2

    type_specifier  ->  TYPE_NAME .   (rule 170)

    $default	reduce using rule 170 (type_specifier)



state 3

    storage_class_specifier  ->  TYPEDEF .   (rule 152)

    $default	reduce using rule 152 (storage_class_specifier)



state 4

    storage_class_specifier  ->  EXTERN .   (rule 153)

    $default	reduce using rule 153 (storage_class_specifier)



state 5

    storage_class_specifier  ->  STATIC .   (rule 154)

    $default	reduce using rule 154 (storage_class_specifier)



state 6

    storage_class_specifier  ->  AUTO .   (rule 155)

    $default	reduce using rule 155 (storage_class_specifier)



state 7

    storage_class_specifier  ->  REGISTER .   (rule 156)

    $default	reduce using rule 156 (storage_class_specifier)



state 8

    type_specifier  ->  CHAR .   (rule 160)

    $default	reduce using rule 160 (type_specifier)



state 9

    type_specifier  ->  SHORT .   (rule 161)

    $default	reduce using rule 161 (type_specifier)



state 10

    type_specifier  ->  INT .   (rule 162)

    $default	reduce using rule 162 (type_specifier)



state 11

    type_specifier  ->  LONG .   (rule 163)

    $default	reduce using rule 163 (type_specifier)



state 12

    type_specifier  ->  SIGNED .   (rule 166)

    $default	reduce using rule 166 (type_specifier)



state 13

    type_specifier  ->  UNSIGNED .   (rule 167)

    $default	reduce using rule 167 (type_specifier)



state 14

    type_specifier  ->  FLOAT .   (rule 164)

    $default	reduce using rule 164 (type_specifier)



state 15

    type_specifier  ->  DOUBLE .   (rule 165)

    $default	reduce using rule 165 (type_specifier)



state 16

    type_qualifier  ->  CONST .   (rule 211)

    $default	reduce using rule 211 (type_qualifier)



state 17

    type_qualifier  ->  VOLATILE .   (rule 212)

    $default	reduce using rule 212 (type_qualifier)



state 18

    type_specifier  ->  VOID .   (rule 159)

    $default	reduce using rule 159 (type_specifier)



state 19

    struct_or_union  ->  STRUCT .   (rule 180)

    $default	reduce using rule 180 (struct_or_union)



state 20

    struct_or_union  ->  UNION .   (rule 181)

    $default	reduce using rule 181 (struct_or_union)



state 21

    enum_specifier  ->  ENUM . '{' enumerator_list '}'   (rule 204)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list '}'   (rule 205)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 206)

    IDENTIFIER	shift, and go to state 50
    '{' 	shift, and go to state 51



state 22

    type_specifier  ->  ID .   (rule 171)
    type_specifier  ->  ID . '<' protocol_list '>'   (rule 172)

    '<' 	shift, and go to state 52

    $default	reduce using rule 171 (type_specifier)



state 23

    type_specifier  ->  SEL .   (rule 173)

    $default	reduce using rule 173 (type_specifier)



state 24

    type_specifier  ->  BOOL .   (rule 174)

    $default	reduce using rule 174 (type_specifier)



state 25

    type_specifier  ->  UNICHAR .   (rule 175)

    $default	reduce using rule 175 (type_specifier)



state 26

    type_specifier  ->  CLASS .   (rule 176)

    $default	reduce using rule 176 (type_specifier)



state 27

    objc_declaration  ->  AT_CLASS . class_name_list ';'   (rule 129)

    IDENTIFIER	shift, and go to state 53

    class_name_list	go to state 54



state 28

    objc_declaration  ->  AT_PROTOCOL . class_name_declaration AT_END   (rule 130)
    objc_declaration  ->  AT_PROTOCOL . class_name_declaration method_declaration_list AT_END   (rule 131)

    IDENTIFIER	shift, and go to state 55

    class_with_superclass	go to state 56
    class_name_declaration	go to state 57



state 29

    objc_declaration  ->  AT_INTERFACE . class_name_declaration AT_END   (rule 132)
    objc_declaration  ->  AT_INTERFACE . class_name_declaration ivar_declaration_list method_declaration_list AT_END   (rule 133)
    objc_declaration  ->  AT_INTERFACE . class_name_declaration ivar_declaration_list AT_END   (rule 134)

    IDENTIFIER	shift, and go to state 55

    class_with_superclass	go to state 56
    class_name_declaration	go to state 58



state 30

    objc_declaration  ->  AT_IMPLEMENTATION . class_implementation AT_END   (rule 135)
    objc_declaration  ->  AT_IMPLEMENTATION . class_implementation ivar_declaration_list AT_END   (rule 136)
    objc_declaration  ->  AT_IMPLEMENTATION . class_implementation method_implementation_list AT_END   (rule 137)
    objc_declaration  ->  AT_IMPLEMENTATION . class_implementation ivar_declaration_list method_implementation_list AT_END   (rule 138)

    IDENTIFIER	shift, and go to state 59

    class_implementation	go to state 60



state 31

    type_qualifier  ->  WEAK .   (rule 213)

    $default	reduce using rule 213 (type_qualifier)



state 32

    type_qualifier  ->  STRONG .   (rule 214)

    $default	reduce using rule 214 (type_qualifier)



state 33

    direct_declarator  ->  '(' . declarator ')'   (rule 218)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    declarator	go to state 61
    direct_declarator	go to state 45
    pointer	go to state 46



state 34

    pointer  ->  '*' .   (rule 224)
    pointer  ->  '*' . type_qualifier_list   (rule 225)
    pointer  ->  '*' . pointer   (rule 226)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 227)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '*' 	shift, and go to state 34

    $default	reduce using rule 224 (pointer)

    type_qualifier	go to state 62
    pointer	go to state 63
    type_qualifier_list	go to state 64



state 35

    declaration  ->  objc_declaration .   (rule 141)

    $default	reduce using rule 141 (declaration)



state 36

    external_declaration  ->  declaration .   (rule 296)

    $default	reduce using rule 296 (external_declaration)



state 37

    declaration  ->  declaration_specifiers . ';'   (rule 139)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 140)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 297)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 298)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34
    ';' 	shift, and go to state 65

    init_declarator_list	go to state 66
    init_declarator	go to state 67
    declarator	go to state 68
    direct_declarator	go to state 45
    pointer	go to state 46



state 38

    declaration_specifiers  ->  storage_class_specifier .   (rule 142)
    declaration_specifiers  ->  storage_class_specifier . declaration_specifiers   (rule 143)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    $default	reduce using rule 142 (declaration_specifiers)

    declaration_specifiers	go to state 69
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43



state 39

    declaration_specifiers  ->  type_specifier .   (rule 144)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 145)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    $default	reduce using rule 144 (declaration_specifiers)

    declaration_specifiers	go to state 70
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43



state 40

    type_specifier  ->  struct_or_union_specifier .   (rule 168)

    $default	reduce using rule 168 (type_specifier)



state 41

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' struct_declaration_list '}'   (rule 177)
    struct_or_union_specifier  ->  struct_or_union . '{' struct_declaration_list '}'   (rule 178)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 179)

    IDENTIFIER	shift, and go to state 71
    '{' 	shift, and go to state 72



state 42

    type_specifier  ->  enum_specifier .   (rule 169)

    $default	reduce using rule 169 (type_specifier)



state 43

    declaration_specifiers  ->  type_qualifier .   (rule 146)
    declaration_specifiers  ->  type_qualifier . declaration_specifiers   (rule 147)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    $default	reduce using rule 146 (declaration_specifiers)

    declaration_specifiers	go to state 73
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43



state 44

    function_definition  ->  declarator . declaration_list compound_statement   (rule 299)
    function_definition  ->  declarator . compound_statement   (rule 300)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '{' 	shift, and go to state 74

    objc_declaration	go to state 35
    declaration	go to state 75
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    compound_statement	go to state 77
    declaration_list	go to state 78



state 45

    declarator  ->  direct_declarator .   (rule 216)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 219)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 220)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 221)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 222)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 223)

    '(' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    $default	reduce using rule 216 (declarator)



state 46

    declarator  ->  pointer . direct_declarator   (rule 215)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 33

    direct_declarator	go to state 81



state 47

    translation_unit  ->  translation_unit . external_declaration   (rule 294)

    $   	go to state 528
    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    objc_declaration	go to state 35
    declaration	go to state 36
    declaration_specifiers	go to state 37
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    declarator	go to state 44
    direct_declarator	go to state 45
    pointer	go to state 46
    external_declaration	go to state 82
    function_definition	go to state 49



state 48

    translation_unit  ->  external_declaration .   (rule 293)

    $default	reduce using rule 293 (translation_unit)



state 49

    external_declaration  ->  function_definition .   (rule 295)

    $default	reduce using rule 295 (external_declaration)



state 50

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list '}'   (rule 205)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 206)

    '{' 	shift, and go to state 83

    $default	reduce using rule 206 (enum_specifier)



state 51

    enum_specifier  ->  ENUM '{' . enumerator_list '}'   (rule 204)

    IDENTIFIER	shift, and go to state 84

    enumerator_list	go to state 85
    enumerator	go to state 86



state 52

    type_specifier  ->  ID '<' . protocol_list '>'   (rule 172)

    IDENTIFIER	shift, and go to state 87

    protocol_list	go to state 88



state 53

    class_name_list  ->  IDENTIFIER .   (rule 92)

    $default	reduce using rule 92 (class_name_list)



state 54

    class_name_list  ->  class_name_list . ',' IDENTIFIER   (rule 93)
    objc_declaration  ->  AT_CLASS class_name_list . ';'   (rule 129)

    ',' 	shift, and go to state 89
    ';' 	shift, and go to state 90



state 55

    class_with_superclass  ->  IDENTIFIER .   (rule 94)
    class_with_superclass  ->  IDENTIFIER . ':' IDENTIFIER   (rule 95)

    ':' 	shift, and go to state 91

    $default	reduce using rule 94 (class_with_superclass)



state 56

    class_name_declaration  ->  class_with_superclass .   (rule 98)
    class_name_declaration  ->  class_with_superclass . '<' inherited_protocols '>'   (rule 99)
    class_name_declaration  ->  class_with_superclass . '(' category_name ')'   (rule 100)
    class_name_declaration  ->  class_with_superclass . '<' inherited_protocols '>' '(' category_name ')'   (rule 101)

    '(' 	shift, and go to state 92
    '<' 	shift, and go to state 93

    $default	reduce using rule 98 (class_name_declaration)



state 57

    objc_declaration  ->  AT_PROTOCOL class_name_declaration . AT_END   (rule 130)
    objc_declaration  ->  AT_PROTOCOL class_name_declaration . method_declaration_list AT_END   (rule 131)

    AT_END	shift, and go to state 94
    AT_OPTIONAL	shift, and go to state 95
    AT_REQUIRED	shift, and go to state 96
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 100
    method_declaration_list	go to state 101



state 58

    objc_declaration  ->  AT_INTERFACE class_name_declaration . AT_END   (rule 132)
    objc_declaration  ->  AT_INTERFACE class_name_declaration . ivar_declaration_list method_declaration_list AT_END   (rule 133)
    objc_declaration  ->  AT_INTERFACE class_name_declaration . ivar_declaration_list AT_END   (rule 134)

    AT_END	shift, and go to state 102
    '{' 	shift, and go to state 103

    ivar_declaration_list	go to state 104



state 59

    class_implementation  ->  IDENTIFIER .   (rule 123)
    class_implementation  ->  IDENTIFIER . '(' category_name ')'   (rule 124)

    '(' 	shift, and go to state 105

    $default	reduce using rule 123 (class_implementation)



state 60

    objc_declaration  ->  AT_IMPLEMENTATION class_implementation . AT_END   (rule 135)
    objc_declaration  ->  AT_IMPLEMENTATION class_implementation . ivar_declaration_list AT_END   (rule 136)
    objc_declaration  ->  AT_IMPLEMENTATION class_implementation . method_implementation_list AT_END   (rule 137)
    objc_declaration  ->  AT_IMPLEMENTATION class_implementation . ivar_declaration_list method_implementation_list AT_END   (rule 138)

    AT_END	shift, and go to state 106
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98
    '{' 	shift, and go to state 103

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 107
    ivar_declaration_list	go to state 108
    method_implementation	go to state 109
    method_implementation_list	go to state 110



state 61

    direct_declarator  ->  '(' declarator . ')'   (rule 218)

    ')' 	shift, and go to state 111



state 62

    type_qualifier_list  ->  type_qualifier .   (rule 228)

    $default	reduce using rule 228 (type_qualifier_list)



state 63

    pointer  ->  '*' pointer .   (rule 226)

    $default	reduce using rule 226 (pointer)



state 64

    pointer  ->  '*' type_qualifier_list .   (rule 225)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 227)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 229)

    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '*' 	shift, and go to state 34

    $default	reduce using rule 225 (pointer)

    type_qualifier	go to state 112
    pointer	go to state 113



state 65

    declaration  ->  declaration_specifiers ';' .   (rule 139)

    $default	reduce using rule 139 (declaration)



state 66

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 140)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 149)

    ',' 	shift, and go to state 114
    ';' 	shift, and go to state 115



state 67

    init_declarator_list  ->  init_declarator .   (rule 148)

    $default	reduce using rule 148 (init_declarator_list)



state 68

    init_declarator  ->  declarator .   (rule 150)
    init_declarator  ->  declarator . '=' initializer   (rule 151)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 297)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 298)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '{' 	shift, and go to state 74
    '=' 	shift, and go to state 116

    $default	reduce using rule 150 (init_declarator)

    objc_declaration	go to state 35
    declaration	go to state 75
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    compound_statement	go to state 117
    declaration_list	go to state 118



state 69

    declaration_specifiers  ->  storage_class_specifier declaration_specifiers .   (rule 143)

    $default	reduce using rule 143 (declaration_specifiers)



state 70

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 145)

    $default	reduce using rule 145 (declaration_specifiers)



state 71

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' struct_declaration_list '}'   (rule 177)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 179)

    '{' 	shift, and go to state 119

    $default	reduce using rule 179 (struct_or_union_specifier)



state 72

    struct_or_union_specifier  ->  struct_or_union '{' . struct_declaration_list '}'   (rule 178)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_PRIVATE	shift, and go to state 120
    AT_PUBLIC	shift, and go to state 121
    AT_PROTECTED	shift, and go to state 122
    AT_PROPERTY	shift, and go to state 123
    AT_SYNTHESIZE	shift, and go to state 124
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    struct_declaration_list	go to state 126
    struct_declaration	go to state 127
    specifier_qualifier_list	go to state 128
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 73

    declaration_specifiers  ->  type_qualifier declaration_specifiers .   (rule 147)

    $default	reduce using rule 147 (declaration_specifiers)



state 74

    compound_statement  ->  '{' . '}'   (rule 269)
    compound_statement  ->  '{' . statement_list '}'   (rule 270)
    compound_statement  ->  '{' . declaration_list '}'   (rule 271)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 272)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    '}' 	shift, and go to state 160
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    objc_declaration	go to state 35
    declaration	go to state 75
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    statement	go to state 180
    labeled_statement	go to state 181
    compound_statement	go to state 182
    declaration_list	go to state 183
    statement_list	go to state 184
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 75

    declaration_list  ->  declaration .   (rule 273)

    $default	reduce using rule 273 (declaration_list)



state 76

    declaration  ->  declaration_specifiers . ';'   (rule 139)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 140)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34
    ';' 	shift, and go to state 65

    init_declarator_list	go to state 66
    init_declarator	go to state 67
    declarator	go to state 189
    direct_declarator	go to state 45
    pointer	go to state 46



state 77

    function_definition  ->  declarator compound_statement .   (rule 300)

    $default	reduce using rule 300 (function_definition)



state 78

    declaration_list  ->  declaration_list . declaration   (rule 274)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 299)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '{' 	shift, and go to state 74

    objc_declaration	go to state 35
    declaration	go to state 190
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    compound_statement	go to state 191



state 79

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 221)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 222)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 223)

    IDENTIFIER	shift, and go to state 192
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    ')' 	shift, and go to state 193

    declaration_specifiers	go to state 194
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    parameter_type_list	go to state 195
    parameter_list	go to state 196
    parameter_declaration	go to state 197
    identifier_list	go to state 198



state 80

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 219)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 220)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    ']' 	shift, and go to state 200
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 203



state 81

    declarator  ->  pointer direct_declarator .   (rule 215)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 219)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 220)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 221)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 222)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 223)

    '(' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    $default	reduce using rule 215 (declarator)



state 82

    translation_unit  ->  translation_unit external_declaration .   (rule 294)

    $default	reduce using rule 294 (translation_unit)



state 83

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list '}'   (rule 205)

    IDENTIFIER	shift, and go to state 84

    enumerator_list	go to state 204
    enumerator	go to state 86



state 84

    enumerator  ->  IDENTIFIER .   (rule 209)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 210)

    '=' 	shift, and go to state 205

    $default	reduce using rule 209 (enumerator)



state 85

    enum_specifier  ->  ENUM '{' enumerator_list . '}'   (rule 204)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 208)

    ',' 	shift, and go to state 206
    '}' 	shift, and go to state 207



state 86

    enumerator_list  ->  enumerator .   (rule 207)

    $default	reduce using rule 207 (enumerator_list)



state 87

    protocol_list  ->  IDENTIFIER .   (rule 157)

    $default	reduce using rule 157 (protocol_list)



state 88

    protocol_list  ->  protocol_list . ',' IDENTIFIER   (rule 158)
    type_specifier  ->  ID '<' protocol_list . '>'   (rule 172)

    ',' 	shift, and go to state 208
    '>' 	shift, and go to state 209



state 89

    class_name_list  ->  class_name_list ',' . IDENTIFIER   (rule 93)

    IDENTIFIER	shift, and go to state 210



state 90

    objc_declaration  ->  AT_CLASS class_name_list ';' .   (rule 129)

    $default	reduce using rule 129 (objc_declaration)



state 91

    class_with_superclass  ->  IDENTIFIER ':' . IDENTIFIER   (rule 95)

    IDENTIFIER	shift, and go to state 211



state 92

    class_name_declaration  ->  class_with_superclass '(' . category_name ')'   (rule 100)

    IDENTIFIER	shift, and go to state 212

    category_name	go to state 213



state 93

    class_name_declaration  ->  class_with_superclass '<' . inherited_protocols '>'   (rule 99)
    class_name_declaration  ->  class_with_superclass '<' . inherited_protocols '>' '(' category_name ')'   (rule 101)

    IDENTIFIER	shift, and go to state 87

    inherited_protocols	go to state 214
    protocol_list	go to state 215



state 94

    objc_declaration  ->  AT_PROTOCOL class_name_declaration AT_END .   (rule 130)

    $default	reduce using rule 130 (objc_declaration)



state 95

    method_declaration_list  ->  AT_OPTIONAL . method_declaration ';'   (rule 119)

    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 216



state 96

    method_declaration_list  ->  AT_REQUIRED . method_declaration ';'   (rule 120)

    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 217



state 97

    class_or_instance_method_specifier  ->  '+' .   (rule 102)

    $default	reduce using rule 102 (class_or_instance_method_specifier)



state 98

    class_or_instance_method_specifier  ->  '-' .   (rule 103)

    $default	reduce using rule 103 (class_or_instance_method_specifier)



state 99

    method_declaration  ->  class_or_instance_method_specifier . '(' objc_declaration_specifiers ')' selector_with_argument_declaration   (rule 117)

    '(' 	shift, and go to state 218



state 100

    method_declaration_list  ->  method_declaration . ';'   (rule 118)

    ';' 	shift, and go to state 219



state 101

    method_declaration_list  ->  method_declaration_list . method_declaration ';'   (rule 121)
    objc_declaration  ->  AT_PROTOCOL class_name_declaration method_declaration_list . AT_END   (rule 131)

    AT_END	shift, and go to state 220
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 221



state 102

    objc_declaration  ->  AT_INTERFACE class_name_declaration AT_END .   (rule 132)

    $default	reduce using rule 132 (objc_declaration)



state 103

    ivar_declaration_list  ->  '{' . struct_declaration_list '}'   (rule 122)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_PRIVATE	shift, and go to state 120
    AT_PUBLIC	shift, and go to state 121
    AT_PROTECTED	shift, and go to state 122
    AT_PROPERTY	shift, and go to state 123
    AT_SYNTHESIZE	shift, and go to state 124
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    struct_declaration_list	go to state 222
    struct_declaration	go to state 127
    specifier_qualifier_list	go to state 128
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 104

    objc_declaration  ->  AT_INTERFACE class_name_declaration ivar_declaration_list . method_declaration_list AT_END   (rule 133)
    objc_declaration  ->  AT_INTERFACE class_name_declaration ivar_declaration_list . AT_END   (rule 134)

    AT_END	shift, and go to state 223
    AT_OPTIONAL	shift, and go to state 95
    AT_REQUIRED	shift, and go to state 96
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 100
    method_declaration_list	go to state 224



state 105

    class_implementation  ->  IDENTIFIER '(' . category_name ')'   (rule 124)

    IDENTIFIER	shift, and go to state 212

    category_name	go to state 225



state 106

    objc_declaration  ->  AT_IMPLEMENTATION class_implementation AT_END .   (rule 135)

    $default	reduce using rule 135 (objc_declaration)



state 107

    method_implementation  ->  method_declaration . compound_statement   (rule 125)
    method_implementation  ->  method_declaration . ';' compound_statement   (rule 126)

    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 226

    compound_statement	go to state 227



state 108

    objc_declaration  ->  AT_IMPLEMENTATION class_implementation ivar_declaration_list . AT_END   (rule 136)
    objc_declaration  ->  AT_IMPLEMENTATION class_implementation ivar_declaration_list . method_implementation_list AT_END   (rule 138)

    AT_END	shift, and go to state 228
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 107
    method_implementation	go to state 109
    method_implementation_list	go to state 229



state 109

    method_implementation_list  ->  method_implementation .   (rule 127)

    $default	reduce using rule 127 (method_implementation_list)



state 110

    method_implementation_list  ->  method_implementation_list . method_implementation   (rule 128)
    objc_declaration  ->  AT_IMPLEMENTATION class_implementation method_implementation_list . AT_END   (rule 137)

    AT_END	shift, and go to state 230
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 107
    method_implementation	go to state 231



state 111

    direct_declarator  ->  '(' declarator ')' .   (rule 218)

    $default	reduce using rule 218 (direct_declarator)



state 112

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 229)

    $default	reduce using rule 229 (type_qualifier_list)



state 113

    pointer  ->  '*' type_qualifier_list pointer .   (rule 227)

    $default	reduce using rule 227 (pointer)



state 114

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 149)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    init_declarator	go to state 232
    declarator	go to state 189
    direct_declarator	go to state 45
    pointer	go to state 46



state 115

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 140)

    $default	reduce using rule 140 (declaration)



state 116

    init_declarator  ->  declarator '=' . initializer   (rule 151)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 233

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 234
    initializer	go to state 235



state 117

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 298)

    $default	reduce using rule 298 (function_definition)



state 118

    declaration_list  ->  declaration_list . declaration   (rule 274)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 297)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '{' 	shift, and go to state 74

    objc_declaration	go to state 35
    declaration	go to state 190
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    compound_statement	go to state 236



state 119

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . struct_declaration_list '}'   (rule 177)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_PRIVATE	shift, and go to state 120
    AT_PUBLIC	shift, and go to state 121
    AT_PROTECTED	shift, and go to state 122
    AT_PROPERTY	shift, and go to state 123
    AT_SYNTHESIZE	shift, and go to state 124
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    struct_declaration_list	go to state 237
    struct_declaration	go to state 127
    specifier_qualifier_list	go to state 128
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 120

    struct_declaration  ->  AT_PRIVATE . specifier_qualifier_list struct_declarator_list ';'   (rule 187)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 238
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 121

    struct_declaration  ->  AT_PUBLIC . specifier_qualifier_list struct_declarator_list ';'   (rule 188)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 239
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 122

    struct_declaration  ->  AT_PROTECTED . specifier_qualifier_list struct_declarator_list ';'   (rule 189)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 240
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 123

    struct_declaration  ->  AT_PROPERTY . '(' property_attributes_list ')' specifier_qualifier_list struct_declarator_list ';'   (rule 190)
    struct_declaration  ->  AT_PROPERTY . specifier_qualifier_list struct_declarator_list ';'   (rule 191)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 241

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 242
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 124

    struct_declaration  ->  AT_SYNTHESIZE . ivar_list ';'   (rule 192)

    IDENTIFIER	shift, and go to state 243

    ivar_list	go to state 244



state 125

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 195)
    specifier_qualifier_list  ->  type_specifier .   (rule 196)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    $default	reduce using rule 196 (specifier_qualifier_list)

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 245
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 126

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list . '}'   (rule 178)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 183)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_PRIVATE	shift, and go to state 120
    AT_PUBLIC	shift, and go to state 121
    AT_PROTECTED	shift, and go to state 122
    AT_PROPERTY	shift, and go to state 123
    AT_SYNTHESIZE	shift, and go to state 124
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '}' 	shift, and go to state 246

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    struct_declaration	go to state 247
    specifier_qualifier_list	go to state 128
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 127

    struct_declaration_list  ->  struct_declaration .   (rule 182)

    $default	reduce using rule 182 (struct_declaration_list)



state 128

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 186)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator_list	go to state 249
    struct_declarator	go to state 250
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 129

    specifier_qualifier_list  ->  type_qualifier . specifier_qualifier_list   (rule 197)
    specifier_qualifier_list  ->  type_qualifier .   (rule 198)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    $default	reduce using rule 198 (specifier_qualifier_list)

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 252
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 130

    primary_expression  ->  IDENTIFIER .   (rule 13)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 266)

    ':' 	shift, and go to state 253

    $default	reduce using rule 13 (primary_expression)



state 131

    primary_expression  ->  CONSTANT .   (rule 14)

    $default	reduce using rule 14 (primary_expression)



state 132

    primary_expression  ->  STRING_LITERAL .   (rule 15)

    $default	reduce using rule 15 (primary_expression)



state 133

    unary_expression  ->  SIZEOF . unary_expression   (rule 35)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 36)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 254
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 255
    unary_operator	go to state 165



state 134

    unary_expression  ->  INC_OP . unary_expression   (rule 32)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 256
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 257
    unary_operator	go to state 165



state 135

    unary_expression  ->  DEC_OP . unary_expression   (rule 33)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 256
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 258
    unary_operator	go to state 165



state 136

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 267)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 259



state 137

    labeled_statement  ->  DEFAULT . ':' statement   (rule 268)

    ':' 	shift, and go to state 260



state 138

    selection_statement  ->  IF . '(' expression ')' statement   (rule 279)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 280)

    '(' 	shift, and go to state 261



state 139

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 281)

    '(' 	shift, and go to state 262



state 140

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 282)

    '(' 	shift, and go to state 263



state 141

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 283)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 264
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 142

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 284)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 285)
    iteration_statement  ->  FOR . '(' declaration expression_statement expression ')' statement   (rule 286)
    iteration_statement  ->  FOR . '(' declaration IN expression ')' statement   (rule 287)

    '(' 	shift, and go to state 265



state 143

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 288)

    IDENTIFIER	shift, and go to state 266



state 144

    jump_statement  ->  CONTINUE . ';'   (rule 289)

    ';' 	shift, and go to state 267



state 145

    jump_statement  ->  BREAK . ';'   (rule 290)

    ';' 	shift, and go to state 268



state 146

    jump_statement  ->  RETURN . ';'   (rule 291)
    jump_statement  ->  RETURN . expression ';'   (rule 292)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    ';' 	shift, and go to state 269

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 270



state 147

    primary_expression  ->  AT_STRING_LITERAL .   (rule 17)

    $default	reduce using rule 17 (primary_expression)



state 148

    primary_expression  ->  AT_SELECTOR . '(' selector ')'   (rule 19)

    '(' 	shift, and go to state 271



state 149

    primary_expression  ->  AT_ENCODE . '(' type_name ')'   (rule 20)

    '(' 	shift, and go to state 272



state 150

    statement  ->  AT_CATCH .   (rule 264)

    $default	reduce using rule 264 (statement)



state 151

    statement  ->  AT_TRY .   (rule 265)

    $default	reduce using rule 265 (statement)



state 152

    primary_expression  ->  '(' . expression ')'   (rule 16)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 44)
    cast_expression  ->  '(' . type_name ')' '{' struct_component_expression '}'   (rule 45)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    AT_STRING_LITERAL	shift, and go to state 147
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 273
    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 274
    enum_specifier	go to state 42
    type_qualifier	go to state 129
    type_name	go to state 275



state 153

    primary_expression  ->  '[' . expression selector_with_arguments ']'   (rule 18)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 276



state 154

    unary_operator  ->  '&' .   (rule 37)

    $default	reduce using rule 37 (unary_operator)



state 155

    unary_operator  ->  '*' .   (rule 38)

    $default	reduce using rule 38 (unary_operator)



state 156

    unary_operator  ->  '+' .   (rule 39)

    $default	reduce using rule 39 (unary_operator)



state 157

    unary_operator  ->  '-' .   (rule 40)

    $default	reduce using rule 40 (unary_operator)



state 158

    unary_operator  ->  '~' .   (rule 41)

    $default	reduce using rule 41 (unary_operator)



state 159

    unary_operator  ->  '!' .   (rule 42)

    $default	reduce using rule 42 (unary_operator)



state 160

    compound_statement  ->  '{' '}' .   (rule 269)

    $default	reduce using rule 269 (compound_statement)



state 161

    expression_statement  ->  ';' .   (rule 277)

    $default	reduce using rule 277 (expression_statement)



state 162

    postfix_expression  ->  primary_expression .   (rule 21)

    $default	reduce using rule 21 (postfix_expression)



state 163

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 22)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 23)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 24)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 25)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 26)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 27)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 28)
    unary_expression  ->  postfix_expression .   (rule 31)

    PTR_OP	shift, and go to state 277
    INC_OP	shift, and go to state 278
    DEC_OP	shift, and go to state 279
    '(' 	shift, and go to state 280
    '[' 	shift, and go to state 281
    '.' 	shift, and go to state 282

    INC_OP	[reduce using rule 31 (unary_expression)]
    DEC_OP	[reduce using rule 31 (unary_expression)]
    '(' 	[reduce using rule 31 (unary_expression)]
    '[' 	[reduce using rule 31 (unary_expression)]
    $default	reduce using rule 31 (unary_expression)



state 164

    cast_expression  ->  unary_expression .   (rule 43)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 77)

    MUL_ASSIGN	shift, and go to state 283
    DIV_ASSIGN	shift, and go to state 284
    MOD_ASSIGN	shift, and go to state 285
    ADD_ASSIGN	shift, and go to state 286
    SUB_ASSIGN	shift, and go to state 287
    LEFT_ASSIGN	shift, and go to state 288
    RIGHT_ASSIGN	shift, and go to state 289
    AND_ASSIGN	shift, and go to state 290
    XOR_ASSIGN	shift, and go to state 291
    OR_ASSIGN	shift, and go to state 292
    '=' 	shift, and go to state 293

    $default	reduce using rule 43 (cast_expression)

    assignment_operator	go to state 294



state 165

    unary_expression  ->  unary_operator . cast_expression   (rule 34)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 295



state 166

    multiplicative_expression  ->  cast_expression .   (rule 46)

    $default	reduce using rule 46 (multiplicative_expression)



state 167

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 47)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 48)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 49)
    additive_expression  ->  multiplicative_expression .   (rule 50)

    '*' 	shift, and go to state 296
    '/' 	shift, and go to state 297
    '%' 	shift, and go to state 298

    '*' 	[reduce using rule 50 (additive_expression)]
    $default	reduce using rule 50 (additive_expression)



state 168

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 51)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 52)
    shift_expression  ->  additive_expression .   (rule 53)

    '+' 	shift, and go to state 299
    '-' 	shift, and go to state 300

    '+' 	[reduce using rule 53 (shift_expression)]
    '-' 	[reduce using rule 53 (shift_expression)]
    $default	reduce using rule 53 (shift_expression)



state 169

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 54)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 55)
    relational_expression  ->  shift_expression .   (rule 56)

    LEFT_OP	shift, and go to state 301
    RIGHT_OP	shift, and go to state 302

    $default	reduce using rule 56 (relational_expression)



state 170

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 57)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 58)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 59)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 60)
    equality_expression  ->  relational_expression .   (rule 61)

    LE_OP	shift, and go to state 303
    GE_OP	shift, and go to state 304
    '<' 	shift, and go to state 305
    '>' 	shift, and go to state 306

    $default	reduce using rule 61 (equality_expression)



state 171

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 62)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 63)
    and_expression  ->  equality_expression .   (rule 64)

    EQ_OP	shift, and go to state 307
    NE_OP	shift, and go to state 308

    $default	reduce using rule 64 (and_expression)



state 172

    and_expression  ->  and_expression . '&' equality_expression   (rule 65)
    exclusive_or_expression  ->  and_expression .   (rule 66)

    '&' 	shift, and go to state 309

    '&' 	[reduce using rule 66 (exclusive_or_expression)]
    $default	reduce using rule 66 (exclusive_or_expression)



state 173

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 67)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 68)

    '^' 	shift, and go to state 310

    $default	reduce using rule 68 (inclusive_or_expression)



state 174

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 69)
    logical_and_expression  ->  inclusive_or_expression .   (rule 70)

    '|' 	shift, and go to state 311

    $default	reduce using rule 70 (logical_and_expression)



state 175

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 71)
    logical_or_expression  ->  logical_and_expression .   (rule 72)

    AND_OP	shift, and go to state 312

    $default	reduce using rule 72 (logical_or_expression)



state 176

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 73)
    conditional_expression  ->  logical_or_expression .   (rule 74)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 75)

    OR_OP	shift, and go to state 313
    '?' 	shift, and go to state 314

    $default	reduce using rule 74 (conditional_expression)



state 177

    assignment_expression  ->  conditional_expression .   (rule 76)

    $default	reduce using rule 76 (assignment_expression)



state 178

    expression  ->  assignment_expression .   (rule 89)

    $default	reduce using rule 89 (expression)



state 179

    expression  ->  expression . ',' assignment_expression   (rule 90)
    expression_statement  ->  expression . ';'   (rule 278)

    ',' 	shift, and go to state 315
    ';' 	shift, and go to state 316



state 180

    statement_list  ->  statement .   (rule 275)

    $default	reduce using rule 275 (statement_list)



state 181

    statement  ->  labeled_statement .   (rule 258)

    $default	reduce using rule 258 (statement)



state 182

    statement  ->  compound_statement .   (rule 259)

    $default	reduce using rule 259 (statement)



state 183

    compound_statement  ->  '{' declaration_list . '}'   (rule 271)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 272)
    declaration_list  ->  declaration_list . declaration   (rule 274)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    '}' 	shift, and go to state 317
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    objc_declaration	go to state 35
    declaration	go to state 190
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    statement	go to state 180
    labeled_statement	go to state 181
    compound_statement	go to state 182
    statement_list	go to state 318
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 184

    compound_statement  ->  '{' statement_list . '}'   (rule 270)
    statement_list  ->  statement_list . statement   (rule 276)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    '}' 	shift, and go to state 319
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 320
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 185

    statement  ->  expression_statement .   (rule 260)

    $default	reduce using rule 260 (statement)



state 186

    statement  ->  selection_statement .   (rule 261)

    $default	reduce using rule 261 (statement)



state 187

    statement  ->  iteration_statement .   (rule 262)

    $default	reduce using rule 262 (statement)



state 188

    statement  ->  jump_statement .   (rule 263)

    $default	reduce using rule 263 (statement)



state 189

    init_declarator  ->  declarator .   (rule 150)
    init_declarator  ->  declarator . '=' initializer   (rule 151)

    '=' 	shift, and go to state 116

    $default	reduce using rule 150 (init_declarator)



state 190

    declaration_list  ->  declaration_list declaration .   (rule 274)

    $default	reduce using rule 274 (declaration_list)



state 191

    function_definition  ->  declarator declaration_list compound_statement .   (rule 299)

    $default	reduce using rule 299 (function_definition)



state 192

    identifier_list  ->  IDENTIFIER .   (rule 237)

    $default	reduce using rule 237 (identifier_list)



state 193

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 223)

    $default	reduce using rule 223 (direct_declarator)



state 194

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 234)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 235)
    parameter_declaration  ->  declaration_specifiers .   (rule 236)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 321
    '[' 	shift, and go to state 322
    '*' 	shift, and go to state 34

    $default	reduce using rule 236 (parameter_declaration)

    declarator	go to state 323
    direct_declarator	go to state 45
    pointer	go to state 324
    abstract_declarator	go to state 325
    direct_abstract_declarator	go to state 326



state 195

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 221)

    ')' 	shift, and go to state 327



state 196

    parameter_type_list  ->  parameter_list .   (rule 230)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 231)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 233)

    ',' 	shift, and go to state 328

    $default	reduce using rule 230 (parameter_type_list)



state 197

    parameter_list  ->  parameter_declaration .   (rule 232)

    $default	reduce using rule 232 (parameter_list)



state 198

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 222)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 238)

    ',' 	shift, and go to state 329
    ')' 	shift, and go to state 330



state 199

    primary_expression  ->  IDENTIFIER .   (rule 13)

    $default	reduce using rule 13 (primary_expression)



state 200

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 220)

    $default	reduce using rule 220 (direct_declarator)



state 201

    cast_expression  ->  unary_expression .   (rule 43)

    $default	reduce using rule 43 (cast_expression)



state 202

    constant_expression  ->  conditional_expression .   (rule 91)

    $default	reduce using rule 91 (constant_expression)



state 203

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 219)

    ']' 	shift, and go to state 331



state 204

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . '}'   (rule 205)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 208)

    ',' 	shift, and go to state 206
    '}' 	shift, and go to state 332



state 205

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 210)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 333



state 206

    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 208)

    IDENTIFIER	shift, and go to state 84

    enumerator	go to state 334



state 207

    enum_specifier  ->  ENUM '{' enumerator_list '}' .   (rule 204)

    $default	reduce using rule 204 (enum_specifier)



state 208

    protocol_list  ->  protocol_list ',' . IDENTIFIER   (rule 158)

    IDENTIFIER	shift, and go to state 335



state 209

    type_specifier  ->  ID '<' protocol_list '>' .   (rule 172)

    $default	reduce using rule 172 (type_specifier)



state 210

    class_name_list  ->  class_name_list ',' IDENTIFIER .   (rule 93)

    $default	reduce using rule 93 (class_name_list)



state 211

    class_with_superclass  ->  IDENTIFIER ':' IDENTIFIER .   (rule 95)

    $default	reduce using rule 95 (class_with_superclass)



state 212

    category_name  ->  IDENTIFIER .   (rule 96)

    $default	reduce using rule 96 (category_name)



state 213

    class_name_declaration  ->  class_with_superclass '(' category_name . ')'   (rule 100)

    ')' 	shift, and go to state 336



state 214

    class_name_declaration  ->  class_with_superclass '<' inherited_protocols . '>'   (rule 99)
    class_name_declaration  ->  class_with_superclass '<' inherited_protocols . '>' '(' category_name ')'   (rule 101)

    '>' 	shift, and go to state 337



state 215

    inherited_protocols  ->  protocol_list .   (rule 97)
    protocol_list  ->  protocol_list . ',' IDENTIFIER   (rule 158)

    ',' 	shift, and go to state 208

    $default	reduce using rule 97 (inherited_protocols)



state 216

    method_declaration_list  ->  AT_OPTIONAL method_declaration . ';'   (rule 119)

    ';' 	shift, and go to state 338



state 217

    method_declaration_list  ->  AT_REQUIRED method_declaration . ';'   (rule 120)

    ';' 	shift, and go to state 339



state 218

    method_declaration  ->  class_or_instance_method_specifier '(' . objc_declaration_specifiers ')' selector_with_argument_declaration   (rule 117)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    IN  	shift, and go to state 340
    OUT 	shift, and go to state 341
    INOUT	shift, and go to state 342
    BYREF	shift, and go to state 343
    BYCOPY	shift, and go to state 344
    ONEWAY	shift, and go to state 345
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    do_atribute_specifier	go to state 346
    objc_declaration_specifiers	go to state 347
    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 274
    enum_specifier	go to state 42
    type_qualifier	go to state 129
    type_name	go to state 348



state 219

    method_declaration_list  ->  method_declaration ';' .   (rule 118)

    $default	reduce using rule 118 (method_declaration_list)



state 220

    objc_declaration  ->  AT_PROTOCOL class_name_declaration method_declaration_list AT_END .   (rule 131)

    $default	reduce using rule 131 (objc_declaration)



state 221

    method_declaration_list  ->  method_declaration_list method_declaration . ';'   (rule 121)

    ';' 	shift, and go to state 349



state 222

    ivar_declaration_list  ->  '{' struct_declaration_list . '}'   (rule 122)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 183)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_PRIVATE	shift, and go to state 120
    AT_PUBLIC	shift, and go to state 121
    AT_PROTECTED	shift, and go to state 122
    AT_PROPERTY	shift, and go to state 123
    AT_SYNTHESIZE	shift, and go to state 124
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '}' 	shift, and go to state 350

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    struct_declaration	go to state 247
    specifier_qualifier_list	go to state 128
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 223

    objc_declaration  ->  AT_INTERFACE class_name_declaration ivar_declaration_list AT_END .   (rule 134)

    $default	reduce using rule 134 (objc_declaration)



state 224

    method_declaration_list  ->  method_declaration_list . method_declaration ';'   (rule 121)
    objc_declaration  ->  AT_INTERFACE class_name_declaration ivar_declaration_list method_declaration_list . AT_END   (rule 133)

    AT_END	shift, and go to state 351
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 221



state 225

    class_implementation  ->  IDENTIFIER '(' category_name . ')'   (rule 124)

    ')' 	shift, and go to state 352



state 226

    method_implementation  ->  method_declaration ';' . compound_statement   (rule 126)

    '{' 	shift, and go to state 74

    compound_statement	go to state 353



state 227

    method_implementation  ->  method_declaration compound_statement .   (rule 125)

    $default	reduce using rule 125 (method_implementation)



state 228

    objc_declaration  ->  AT_IMPLEMENTATION class_implementation ivar_declaration_list AT_END .   (rule 136)

    $default	reduce using rule 136 (objc_declaration)



state 229

    method_implementation_list  ->  method_implementation_list . method_implementation   (rule 128)
    objc_declaration  ->  AT_IMPLEMENTATION class_implementation ivar_declaration_list method_implementation_list . AT_END   (rule 138)

    AT_END	shift, and go to state 354
    '+' 	shift, and go to state 97
    '-' 	shift, and go to state 98

    class_or_instance_method_specifier	go to state 99
    method_declaration	go to state 107
    method_implementation	go to state 231



state 230

    objc_declaration  ->  AT_IMPLEMENTATION class_implementation method_implementation_list AT_END .   (rule 137)

    $default	reduce using rule 137 (objc_declaration)



state 231

    method_implementation_list  ->  method_implementation_list method_implementation .   (rule 128)

    $default	reduce using rule 128 (method_implementation_list)



state 232

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 149)

    $default	reduce using rule 149 (init_declarator_list)



state 233

    initializer  ->  '{' . initializer_list '}'   (rule 254)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 255)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 233

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 234
    initializer	go to state 355
    initializer_list	go to state 356



state 234

    initializer  ->  assignment_expression .   (rule 253)

    $default	reduce using rule 253 (initializer)



state 235

    init_declarator  ->  declarator '=' initializer .   (rule 151)

    $default	reduce using rule 151 (init_declarator)



state 236

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 297)

    $default	reduce using rule 297 (function_definition)



state 237

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list . '}'   (rule 177)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 183)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_PRIVATE	shift, and go to state 120
    AT_PUBLIC	shift, and go to state 121
    AT_PROTECTED	shift, and go to state 122
    AT_PROPERTY	shift, and go to state 123
    AT_SYNTHESIZE	shift, and go to state 124
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '}' 	shift, and go to state 357

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    struct_declaration	go to state 247
    specifier_qualifier_list	go to state 128
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 238

    struct_declaration  ->  AT_PRIVATE specifier_qualifier_list . struct_declarator_list ';'   (rule 187)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator_list	go to state 358
    struct_declarator	go to state 250
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 239

    struct_declaration  ->  AT_PUBLIC specifier_qualifier_list . struct_declarator_list ';'   (rule 188)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator_list	go to state 359
    struct_declarator	go to state 250
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 240

    struct_declaration  ->  AT_PROTECTED specifier_qualifier_list . struct_declarator_list ';'   (rule 189)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator_list	go to state 360
    struct_declarator	go to state 250
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 241

    struct_declaration  ->  AT_PROPERTY '(' . property_attributes_list ')' specifier_qualifier_list struct_declarator_list ';'   (rule 190)

    IDENTIFIER	shift, and go to state 361

    property_attributes_list	go to state 362



state 242

    struct_declaration  ->  AT_PROPERTY specifier_qualifier_list . struct_declarator_list ';'   (rule 191)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator_list	go to state 363
    struct_declarator	go to state 250
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 243

    ivar_list  ->  IDENTIFIER .   (rule 194)

    $default	reduce using rule 194 (ivar_list)



state 244

    struct_declaration  ->  AT_SYNTHESIZE ivar_list . ';'   (rule 192)
    ivar_list  ->  ivar_list . IDENTIFIER   (rule 193)

    IDENTIFIER	shift, and go to state 364
    ';' 	shift, and go to state 365



state 245

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 195)

    $default	reduce using rule 195 (specifier_qualifier_list)



state 246

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list '}' .   (rule 178)

    $default	reduce using rule 178 (struct_or_union_specifier)



state 247

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 183)

    $default	reduce using rule 183 (struct_declaration_list)



state 248

    struct_declarator  ->  ':' . constant_expression   (rule 202)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 366



state 249

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 186)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 200)

    ',' 	shift, and go to state 367
    ';' 	shift, and go to state 368



state 250

    struct_declarator_list  ->  struct_declarator .   (rule 199)

    $default	reduce using rule 199 (struct_declarator_list)



state 251

    struct_declarator  ->  declarator .   (rule 201)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 203)

    ':' 	shift, and go to state 369

    $default	reduce using rule 201 (struct_declarator)



state 252

    specifier_qualifier_list  ->  type_qualifier specifier_qualifier_list .   (rule 197)

    $default	reduce using rule 197 (specifier_qualifier_list)



state 253

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 266)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 370
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 254

    primary_expression  ->  '(' . expression ')'   (rule 16)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 36)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    AT_STRING_LITERAL	shift, and go to state 147
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 273
    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 274
    enum_specifier	go to state 42
    type_qualifier	go to state 129
    type_name	go to state 371



state 255

    unary_expression  ->  SIZEOF unary_expression .   (rule 35)

    $default	reduce using rule 35 (unary_expression)



state 256

    primary_expression  ->  '(' . expression ')'   (rule 16)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 273



state 257

    unary_expression  ->  INC_OP unary_expression .   (rule 32)

    $default	reduce using rule 32 (unary_expression)



state 258

    unary_expression  ->  DEC_OP unary_expression .   (rule 33)

    $default	reduce using rule 33 (unary_expression)



state 259

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 267)

    ':' 	shift, and go to state 372



state 260

    labeled_statement  ->  DEFAULT ':' . statement   (rule 268)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 373
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 261

    selection_statement  ->  IF '(' . expression ')' statement   (rule 279)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 280)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 374



state 262

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 281)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 375



state 263

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 282)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 376



state 264

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 283)

    WHILE	shift, and go to state 377



state 265

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 284)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 285)
    iteration_statement  ->  FOR '(' . declaration expression_statement expression ')' statement   (rule 286)
    iteration_statement  ->  FOR '(' . declaration IN expression ')' statement   (rule 287)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    AT_STRING_LITERAL	shift, and go to state 147
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    AT_CLASS	shift, and go to state 27
    AT_PROTOCOL	shift, and go to state 28
    AT_INTERFACE	shift, and go to state 29
    AT_IMPLEMENTATION	shift, and go to state 30
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    objc_declaration	go to state 35
    declaration	go to state 378
    declaration_specifiers	go to state 76
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    expression_statement	go to state 379



state 266

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 288)

    ';' 	shift, and go to state 380



state 267

    jump_statement  ->  CONTINUE ';' .   (rule 289)

    $default	reduce using rule 289 (jump_statement)



state 268

    jump_statement  ->  BREAK ';' .   (rule 290)

    $default	reduce using rule 290 (jump_statement)



state 269

    jump_statement  ->  RETURN ';' .   (rule 291)

    $default	reduce using rule 291 (jump_statement)



state 270

    expression  ->  expression . ',' assignment_expression   (rule 90)
    jump_statement  ->  RETURN expression . ';'   (rule 292)

    ',' 	shift, and go to state 315
    ';' 	shift, and go to state 381



state 271

    primary_expression  ->  AT_SELECTOR '(' . selector ')'   (rule 19)

    IDENTIFIER	shift, and go to state 382
    ':' 	shift, and go to state 383

    selector	go to state 384



state 272

    primary_expression  ->  AT_ENCODE '(' . type_name ')'   (rule 20)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 274
    enum_specifier	go to state 42
    type_qualifier	go to state 129
    type_name	go to state 385



state 273

    primary_expression  ->  '(' expression . ')'   (rule 16)
    expression  ->  expression . ',' assignment_expression   (rule 90)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 386



state 274

    type_name  ->  specifier_qualifier_list .   (rule 239)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 240)

    '(' 	shift, and go to state 387
    '[' 	shift, and go to state 322
    '*' 	shift, and go to state 34

    $default	reduce using rule 239 (type_name)

    pointer	go to state 388
    abstract_declarator	go to state 389
    direct_abstract_declarator	go to state 326



state 275

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 44)
    cast_expression  ->  '(' type_name . ')' '{' struct_component_expression '}'   (rule 45)

    ')' 	shift, and go to state 390



state 276

    primary_expression  ->  '[' expression . selector_with_arguments ']'   (rule 18)
    expression  ->  expression . ',' assignment_expression   (rule 90)

    IDENTIFIER	shift, and go to state 391
    ',' 	shift, and go to state 315

    selector_with_arguments	go to state 392



state 277

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 26)

    IDENTIFIER	shift, and go to state 393



state 278

    postfix_expression  ->  postfix_expression INC_OP .   (rule 27)

    $default	reduce using rule 27 (postfix_expression)



state 279

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 28)

    $default	reduce using rule 28 (postfix_expression)



state 280

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 23)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 24)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    ')' 	shift, and go to state 394
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    argument_expression_list	go to state 395
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 396



state 281

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 22)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 397



state 282

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 25)

    IDENTIFIER	shift, and go to state 398



state 283

    assignment_operator  ->  MUL_ASSIGN .   (rule 79)

    $default	reduce using rule 79 (assignment_operator)



state 284

    assignment_operator  ->  DIV_ASSIGN .   (rule 80)

    $default	reduce using rule 80 (assignment_operator)



state 285

    assignment_operator  ->  MOD_ASSIGN .   (rule 81)

    $default	reduce using rule 81 (assignment_operator)



state 286

    assignment_operator  ->  ADD_ASSIGN .   (rule 82)

    $default	reduce using rule 82 (assignment_operator)



state 287

    assignment_operator  ->  SUB_ASSIGN .   (rule 83)

    $default	reduce using rule 83 (assignment_operator)



state 288

    assignment_operator  ->  LEFT_ASSIGN .   (rule 84)

    $default	reduce using rule 84 (assignment_operator)



state 289

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 85)

    $default	reduce using rule 85 (assignment_operator)



state 290

    assignment_operator  ->  AND_ASSIGN .   (rule 86)

    $default	reduce using rule 86 (assignment_operator)



state 291

    assignment_operator  ->  XOR_ASSIGN .   (rule 87)

    $default	reduce using rule 87 (assignment_operator)



state 292

    assignment_operator  ->  OR_ASSIGN .   (rule 88)

    $default	reduce using rule 88 (assignment_operator)



state 293

    assignment_operator  ->  '=' .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 294

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 77)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 399



state 295

    unary_expression  ->  unary_operator cast_expression .   (rule 34)

    $default	reduce using rule 34 (unary_expression)



state 296

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 47)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 400



state 297

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 48)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 401



state 298

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 49)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 402



state 299

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 51)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 403



state 300

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 52)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 404



state 301

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 54)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 405



state 302

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 55)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 406



state 303

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 59)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 407



state 304

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 60)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 408



state 305

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 57)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 409



state 306

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 58)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 410



state 307

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 62)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 411



state 308

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 63)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 412



state 309

    and_expression  ->  and_expression '&' . equality_expression   (rule 65)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 413



state 310

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 67)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 414



state 311

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 69)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 415



state 312

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 71)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 416



state 313

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 73)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 417



state 314

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 75)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 418



state 315

    expression  ->  expression ',' . assignment_expression   (rule 90)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 419



state 316

    expression_statement  ->  expression ';' .   (rule 278)

    $default	reduce using rule 278 (expression_statement)



state 317

    compound_statement  ->  '{' declaration_list '}' .   (rule 271)

    $default	reduce using rule 271 (compound_statement)



state 318

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 272)
    statement_list  ->  statement_list . statement   (rule 276)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    '}' 	shift, and go to state 420
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 320
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 319

    compound_statement  ->  '{' statement_list '}' .   (rule 270)

    $default	reduce using rule 270 (compound_statement)



state 320

    statement_list  ->  statement_list statement .   (rule 276)

    $default	reduce using rule 276 (statement_list)



state 321

    direct_declarator  ->  '(' . declarator ')'   (rule 218)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 244)
    direct_abstract_declarator  ->  '(' . ')'   (rule 249)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 250)

    IDENTIFIER	shift, and go to state 1
    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 321
    ')' 	shift, and go to state 421
    '[' 	shift, and go to state 322
    '*' 	shift, and go to state 34

    declaration_specifiers	go to state 194
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    declarator	go to state 61
    direct_declarator	go to state 45
    pointer	go to state 324
    parameter_type_list	go to state 422
    parameter_list	go to state 196
    parameter_declaration	go to state 197
    abstract_declarator	go to state 423
    direct_abstract_declarator	go to state 326



state 322

    direct_abstract_declarator  ->  '[' . ']'   (rule 245)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 246)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    ']' 	shift, and go to state 424
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 425



state 323

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 234)

    $default	reduce using rule 234 (parameter_declaration)



state 324

    declarator  ->  pointer . direct_declarator   (rule 215)
    abstract_declarator  ->  pointer .   (rule 241)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 243)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 321
    '[' 	shift, and go to state 322

    $default	reduce using rule 241 (abstract_declarator)

    direct_declarator	go to state 81
    direct_abstract_declarator	go to state 426



state 325

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 235)

    $default	reduce using rule 235 (parameter_declaration)



state 326

    abstract_declarator  ->  direct_abstract_declarator .   (rule 242)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 247)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 248)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 251)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 252)

    '(' 	shift, and go to state 427
    '[' 	shift, and go to state 428

    $default	reduce using rule 242 (abstract_declarator)



state 327

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 221)

    $default	reduce using rule 221 (direct_declarator)



state 328

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 231)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 233)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ELLIPSIS	shift, and go to state 429
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    declaration_specifiers	go to state 194
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    parameter_declaration	go to state 430



state 329

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 238)

    IDENTIFIER	shift, and go to state 431



state 330

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 222)

    $default	reduce using rule 222 (direct_declarator)



state 331

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 219)

    $default	reduce using rule 219 (direct_declarator)



state 332

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list '}' .   (rule 205)

    $default	reduce using rule 205 (enum_specifier)



state 333

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 210)

    $default	reduce using rule 210 (enumerator)



state 334

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 208)

    $default	reduce using rule 208 (enumerator_list)



state 335

    protocol_list  ->  protocol_list ',' IDENTIFIER .   (rule 158)

    $default	reduce using rule 158 (protocol_list)



state 336

    class_name_declaration  ->  class_with_superclass '(' category_name ')' .   (rule 100)

    $default	reduce using rule 100 (class_name_declaration)



state 337

    class_name_declaration  ->  class_with_superclass '<' inherited_protocols '>' .   (rule 99)
    class_name_declaration  ->  class_with_superclass '<' inherited_protocols '>' . '(' category_name ')'   (rule 101)

    '(' 	shift, and go to state 432

    $default	reduce using rule 99 (class_name_declaration)



state 338

    method_declaration_list  ->  AT_OPTIONAL method_declaration ';' .   (rule 119)

    $default	reduce using rule 119 (method_declaration_list)



state 339

    method_declaration_list  ->  AT_REQUIRED method_declaration ';' .   (rule 120)

    $default	reduce using rule 120 (method_declaration_list)



state 340

    do_atribute_specifier  ->  IN .   (rule 105)

    $default	reduce using rule 105 (do_atribute_specifier)



state 341

    do_atribute_specifier  ->  OUT .   (rule 106)

    $default	reduce using rule 106 (do_atribute_specifier)



state 342

    do_atribute_specifier  ->  INOUT .   (rule 107)

    $default	reduce using rule 107 (do_atribute_specifier)



state 343

    do_atribute_specifier  ->  BYREF .   (rule 108)

    $default	reduce using rule 108 (do_atribute_specifier)



state 344

    do_atribute_specifier  ->  BYCOPY .   (rule 109)

    $default	reduce using rule 109 (do_atribute_specifier)



state 345

    do_atribute_specifier  ->  ONEWAY .   (rule 104)

    $default	reduce using rule 104 (do_atribute_specifier)



state 346

    objc_declaration_specifiers  ->  do_atribute_specifier . objc_declaration_specifiers   (rule 110)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    IN  	shift, and go to state 340
    OUT 	shift, and go to state 341
    INOUT	shift, and go to state 342
    BYREF	shift, and go to state 343
    BYCOPY	shift, and go to state 344
    ONEWAY	shift, and go to state 345
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    do_atribute_specifier	go to state 346
    objc_declaration_specifiers	go to state 433
    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 274
    enum_specifier	go to state 42
    type_qualifier	go to state 129
    type_name	go to state 348



state 347

    method_declaration  ->  class_or_instance_method_specifier '(' objc_declaration_specifiers . ')' selector_with_argument_declaration   (rule 117)

    ')' 	shift, and go to state 434



state 348

    objc_declaration_specifiers  ->  type_name .   (rule 111)

    $default	reduce using rule 111 (objc_declaration_specifiers)



state 349

    method_declaration_list  ->  method_declaration_list method_declaration ';' .   (rule 121)

    $default	reduce using rule 121 (method_declaration_list)



state 350

    ivar_declaration_list  ->  '{' struct_declaration_list '}' .   (rule 122)

    $default	reduce using rule 122 (ivar_declaration_list)



state 351

    objc_declaration  ->  AT_INTERFACE class_name_declaration ivar_declaration_list method_declaration_list AT_END .   (rule 133)

    $default	reduce using rule 133 (objc_declaration)



state 352

    class_implementation  ->  IDENTIFIER '(' category_name ')' .   (rule 124)

    $default	reduce using rule 124 (class_implementation)



state 353

    method_implementation  ->  method_declaration ';' compound_statement .   (rule 126)

    $default	reduce using rule 126 (method_implementation)



state 354

    objc_declaration  ->  AT_IMPLEMENTATION class_implementation ivar_declaration_list method_implementation_list AT_END .   (rule 138)

    $default	reduce using rule 138 (objc_declaration)



state 355

    initializer_list  ->  initializer .   (rule 256)

    $default	reduce using rule 256 (initializer_list)



state 356

    initializer  ->  '{' initializer_list . '}'   (rule 254)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 255)
    initializer_list  ->  initializer_list . ',' initializer   (rule 257)

    ',' 	shift, and go to state 435
    '}' 	shift, and go to state 436



state 357

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list '}' .   (rule 177)

    $default	reduce using rule 177 (struct_or_union_specifier)



state 358

    struct_declaration  ->  AT_PRIVATE specifier_qualifier_list struct_declarator_list . ';'   (rule 187)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 200)

    ',' 	shift, and go to state 367
    ';' 	shift, and go to state 437



state 359

    struct_declaration  ->  AT_PUBLIC specifier_qualifier_list struct_declarator_list . ';'   (rule 188)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 200)

    ',' 	shift, and go to state 367
    ';' 	shift, and go to state 438



state 360

    struct_declaration  ->  AT_PROTECTED specifier_qualifier_list struct_declarator_list . ';'   (rule 189)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 200)

    ',' 	shift, and go to state 367
    ';' 	shift, and go to state 439



state 361

    property_attributes_list  ->  IDENTIFIER .   (rule 184)
    property_attributes_list  ->  IDENTIFIER . ',' property_attributes_list   (rule 185)

    ',' 	shift, and go to state 440

    $default	reduce using rule 184 (property_attributes_list)



state 362

    struct_declaration  ->  AT_PROPERTY '(' property_attributes_list . ')' specifier_qualifier_list struct_declarator_list ';'   (rule 190)

    ')' 	shift, and go to state 441



state 363

    struct_declaration  ->  AT_PROPERTY specifier_qualifier_list struct_declarator_list . ';'   (rule 191)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 200)

    ',' 	shift, and go to state 367
    ';' 	shift, and go to state 442



state 364

    ivar_list  ->  ivar_list IDENTIFIER .   (rule 193)

    $default	reduce using rule 193 (ivar_list)



state 365

    struct_declaration  ->  AT_SYNTHESIZE ivar_list ';' .   (rule 192)

    $default	reduce using rule 192 (struct_declaration)



state 366

    struct_declarator  ->  ':' constant_expression .   (rule 202)

    $default	reduce using rule 202 (struct_declarator)



state 367

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 200)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator	go to state 443
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 368

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 186)

    $default	reduce using rule 186 (struct_declaration)



state 369

    struct_declarator  ->  declarator ':' . constant_expression   (rule 203)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 444



state 370

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 266)

    $default	reduce using rule 266 (labeled_statement)



state 371

    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 36)

    ')' 	shift, and go to state 445



state 372

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 267)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 446
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 373

    labeled_statement  ->  DEFAULT ':' statement .   (rule 268)

    $default	reduce using rule 268 (labeled_statement)



state 374

    expression  ->  expression . ',' assignment_expression   (rule 90)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 279)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 280)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 447



state 375

    expression  ->  expression . ',' assignment_expression   (rule 90)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 281)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 448



state 376

    expression  ->  expression . ',' assignment_expression   (rule 90)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 282)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 449



state 377

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 283)

    '(' 	shift, and go to state 450



state 378

    iteration_statement  ->  FOR '(' declaration . expression_statement expression ')' statement   (rule 286)
    iteration_statement  ->  FOR '(' declaration . IN expression ')' statement   (rule 287)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    IN  	shift, and go to state 451
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    expression_statement	go to state 452



state 379

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 284)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 285)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    expression_statement	go to state 453



state 380

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 288)

    $default	reduce using rule 288 (jump_statement)



state 381

    jump_statement  ->  RETURN expression ';' .   (rule 292)

    $default	reduce using rule 292 (jump_statement)



state 382

    selector  ->  IDENTIFIER .   (rule 9)
    selector  ->  IDENTIFIER . ':'   (rule 11)

    ':' 	shift, and go to state 454

    ':' 	[reduce using rule 9 (selector)]
    $default	reduce using rule 9 (selector)



state 383

    selector  ->  ':' .   (rule 10)

    $default	reduce using rule 10 (selector)



state 384

    selector  ->  selector . ':'   (rule 12)
    primary_expression  ->  AT_SELECTOR '(' selector . ')'   (rule 19)

    ':' 	shift, and go to state 455
    ')' 	shift, and go to state 456



state 385

    primary_expression  ->  AT_ENCODE '(' type_name . ')'   (rule 20)

    ')' 	shift, and go to state 457



state 386

    primary_expression  ->  '(' expression ')' .   (rule 16)

    $default	reduce using rule 16 (primary_expression)



state 387

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 244)
    direct_abstract_declarator  ->  '(' . ')'   (rule 249)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 250)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    '(' 	shift, and go to state 387
    ')' 	shift, and go to state 421
    '[' 	shift, and go to state 322
    '*' 	shift, and go to state 34

    declaration_specifiers	go to state 194
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    pointer	go to state 388
    parameter_type_list	go to state 422
    parameter_list	go to state 196
    parameter_declaration	go to state 197
    abstract_declarator	go to state 423
    direct_abstract_declarator	go to state 326



state 388

    abstract_declarator  ->  pointer .   (rule 241)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 243)

    '(' 	shift, and go to state 387
    '[' 	shift, and go to state 322

    $default	reduce using rule 241 (abstract_declarator)

    direct_abstract_declarator	go to state 426



state 389

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 240)

    $default	reduce using rule 240 (type_name)



state 390

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 44)
    cast_expression  ->  '(' type_name ')' . '{' struct_component_expression '}'   (rule 45)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 458

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 459



state 391

    selector_with_arguments  ->  IDENTIFIER .   (rule 3)
    selector_with_arguments  ->  IDENTIFIER . ':' expression   (rule 4)

    ':' 	shift, and go to state 460

    ':' 	[reduce using rule 3 (selector_with_arguments)]
    $default	reduce using rule 3 (selector_with_arguments)



state 392

    selector_with_arguments  ->  selector_with_arguments . selector_component expression   (rule 5)
    selector_with_arguments  ->  selector_with_arguments . ',' ELLIPSIS   (rule 6)
    primary_expression  ->  '[' expression selector_with_arguments . ']'   (rule 18)

    IDENTIFIER	shift, and go to state 461
    ':' 	shift, and go to state 462
    ',' 	shift, and go to state 463
    ']' 	shift, and go to state 464

    selector_component	go to state 465



state 393

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 26)

    $default	reduce using rule 26 (postfix_expression)



state 394

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 23)

    $default	reduce using rule 23 (postfix_expression)



state 395

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 24)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 30)

    ',' 	shift, and go to state 466
    ')' 	shift, and go to state 467



state 396

    argument_expression_list  ->  assignment_expression .   (rule 29)

    $default	reduce using rule 29 (argument_expression_list)



state 397

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 22)
    expression  ->  expression . ',' assignment_expression   (rule 90)

    ',' 	shift, and go to state 315
    ']' 	shift, and go to state 468



state 398

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 25)

    $default	reduce using rule 25 (postfix_expression)



state 399

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 77)

    $default	reduce using rule 77 (assignment_expression)



state 400

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 47)

    $default	reduce using rule 47 (multiplicative_expression)



state 401

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 48)

    $default	reduce using rule 48 (multiplicative_expression)



state 402

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 49)

    $default	reduce using rule 49 (multiplicative_expression)



state 403

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 47)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 48)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 49)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 51)

    '*' 	shift, and go to state 296
    '/' 	shift, and go to state 297
    '%' 	shift, and go to state 298

    '*' 	[reduce using rule 51 (additive_expression)]
    $default	reduce using rule 51 (additive_expression)



state 404

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 47)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 48)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 49)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 52)

    '*' 	shift, and go to state 296
    '/' 	shift, and go to state 297
    '%' 	shift, and go to state 298

    '*' 	[reduce using rule 52 (additive_expression)]
    $default	reduce using rule 52 (additive_expression)



state 405

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 51)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 52)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 54)

    '+' 	shift, and go to state 299
    '-' 	shift, and go to state 300

    '+' 	[reduce using rule 54 (shift_expression)]
    '-' 	[reduce using rule 54 (shift_expression)]
    $default	reduce using rule 54 (shift_expression)



state 406

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 51)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 52)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 55)

    '+' 	shift, and go to state 299
    '-' 	shift, and go to state 300

    '+' 	[reduce using rule 55 (shift_expression)]
    '-' 	[reduce using rule 55 (shift_expression)]
    $default	reduce using rule 55 (shift_expression)



state 407

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 54)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 55)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 59)

    LEFT_OP	shift, and go to state 301
    RIGHT_OP	shift, and go to state 302

    $default	reduce using rule 59 (relational_expression)



state 408

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 54)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 55)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 60)

    LEFT_OP	shift, and go to state 301
    RIGHT_OP	shift, and go to state 302

    $default	reduce using rule 60 (relational_expression)



state 409

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 54)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 55)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 57)

    LEFT_OP	shift, and go to state 301
    RIGHT_OP	shift, and go to state 302

    $default	reduce using rule 57 (relational_expression)



state 410

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 54)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 55)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 58)

    LEFT_OP	shift, and go to state 301
    RIGHT_OP	shift, and go to state 302

    $default	reduce using rule 58 (relational_expression)



state 411

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 57)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 58)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 59)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 60)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 62)

    LE_OP	shift, and go to state 303
    GE_OP	shift, and go to state 304
    '<' 	shift, and go to state 305
    '>' 	shift, and go to state 306

    $default	reduce using rule 62 (equality_expression)



state 412

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 57)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 58)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 59)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 60)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 63)

    LE_OP	shift, and go to state 303
    GE_OP	shift, and go to state 304
    '<' 	shift, and go to state 305
    '>' 	shift, and go to state 306

    $default	reduce using rule 63 (equality_expression)



state 413

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 62)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 63)
    and_expression  ->  and_expression '&' equality_expression .   (rule 65)

    EQ_OP	shift, and go to state 307
    NE_OP	shift, and go to state 308

    $default	reduce using rule 65 (and_expression)



state 414

    and_expression  ->  and_expression . '&' equality_expression   (rule 65)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 67)

    '&' 	shift, and go to state 309

    '&' 	[reduce using rule 67 (exclusive_or_expression)]
    $default	reduce using rule 67 (exclusive_or_expression)



state 415

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 67)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 69)

    '^' 	shift, and go to state 310

    $default	reduce using rule 69 (inclusive_or_expression)



state 416

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 69)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 71)

    '|' 	shift, and go to state 311

    $default	reduce using rule 71 (logical_and_expression)



state 417

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 71)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 73)

    AND_OP	shift, and go to state 312

    $default	reduce using rule 73 (logical_or_expression)



state 418

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 75)
    expression  ->  expression . ',' assignment_expression   (rule 90)

    ':' 	shift, and go to state 469
    ',' 	shift, and go to state 315



state 419

    expression  ->  expression ',' assignment_expression .   (rule 90)

    $default	reduce using rule 90 (expression)



state 420

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 272)

    $default	reduce using rule 272 (compound_statement)



state 421

    direct_abstract_declarator  ->  '(' ')' .   (rule 249)

    $default	reduce using rule 249 (direct_abstract_declarator)



state 422

    direct_abstract_declarator  ->  '(' parameter_type_list . ')'   (rule 250)

    ')' 	shift, and go to state 470



state 423

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 244)

    ')' 	shift, and go to state 471



state 424

    direct_abstract_declarator  ->  '[' ']' .   (rule 245)

    $default	reduce using rule 245 (direct_abstract_declarator)



state 425

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 246)

    ']' 	shift, and go to state 472



state 426

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 243)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 247)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 248)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 251)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 252)

    '(' 	shift, and go to state 427
    '[' 	shift, and go to state 428

    $default	reduce using rule 243 (abstract_declarator)



state 427

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 251)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_type_list ')'   (rule 252)

    TYPE_NAME	shift, and go to state 2
    TYPEDEF	shift, and go to state 3
    EXTERN	shift, and go to state 4
    STATIC	shift, and go to state 5
    AUTO	shift, and go to state 6
    REGISTER	shift, and go to state 7
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32
    ')' 	shift, and go to state 473

    declaration_specifiers	go to state 194
    storage_class_specifier	go to state 38
    type_specifier	go to state 39
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    enum_specifier	go to state 42
    type_qualifier	go to state 43
    parameter_type_list	go to state 474
    parameter_list	go to state 196
    parameter_declaration	go to state 197



state 428

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 247)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . constant_expression ']'   (rule 248)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    ']' 	shift, and go to state 475
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 202
    constant_expression	go to state 476



state 429

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 231)

    $default	reduce using rule 231 (parameter_type_list)



state 430

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 233)

    $default	reduce using rule 233 (parameter_list)



state 431

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 238)

    $default	reduce using rule 238 (identifier_list)



state 432

    class_name_declaration  ->  class_with_superclass '<' inherited_protocols '>' '(' . category_name ')'   (rule 101)

    IDENTIFIER	shift, and go to state 212

    category_name	go to state 477



state 433

    objc_declaration_specifiers  ->  do_atribute_specifier objc_declaration_specifiers .   (rule 110)

    $default	reduce using rule 110 (objc_declaration_specifiers)



state 434

    method_declaration  ->  class_or_instance_method_specifier '(' objc_declaration_specifiers ')' . selector_with_argument_declaration   (rule 117)

    IDENTIFIER	shift, and go to state 478

    selector_with_argument_declaration	go to state 479



state 435

    initializer  ->  '{' initializer_list ',' . '}'   (rule 255)
    initializer_list  ->  initializer_list ',' . initializer   (rule 257)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 233
    '}' 	shift, and go to state 480

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 234
    initializer	go to state 481



state 436

    initializer  ->  '{' initializer_list '}' .   (rule 254)

    $default	reduce using rule 254 (initializer)



state 437

    struct_declaration  ->  AT_PRIVATE specifier_qualifier_list struct_declarator_list ';' .   (rule 187)

    $default	reduce using rule 187 (struct_declaration)



state 438

    struct_declaration  ->  AT_PUBLIC specifier_qualifier_list struct_declarator_list ';' .   (rule 188)

    $default	reduce using rule 188 (struct_declaration)



state 439

    struct_declaration  ->  AT_PROTECTED specifier_qualifier_list struct_declarator_list ';' .   (rule 189)

    $default	reduce using rule 189 (struct_declaration)



state 440

    property_attributes_list  ->  IDENTIFIER ',' . property_attributes_list   (rule 185)

    IDENTIFIER	shift, and go to state 361

    property_attributes_list	go to state 482



state 441

    struct_declaration  ->  AT_PROPERTY '(' property_attributes_list ')' . specifier_qualifier_list struct_declarator_list ';'   (rule 190)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 483
    enum_specifier	go to state 42
    type_qualifier	go to state 129



state 442

    struct_declaration  ->  AT_PROPERTY specifier_qualifier_list struct_declarator_list ';' .   (rule 191)

    $default	reduce using rule 191 (struct_declaration)



state 443

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 200)

    $default	reduce using rule 200 (struct_declarator_list)



state 444

    struct_declarator  ->  declarator ':' constant_expression .   (rule 203)

    $default	reduce using rule 203 (struct_declarator)



state 445

    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 36)

    $default	reduce using rule 36 (unary_expression)



state 446

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 267)

    $default	reduce using rule 267 (labeled_statement)



state 447

    selection_statement  ->  IF '(' expression ')' . statement   (rule 279)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 280)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 484
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 448

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 281)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 485
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 449

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 282)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 486
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 450

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 283)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 487



state 451

    iteration_statement  ->  FOR '(' declaration IN . expression ')' statement   (rule 287)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 488



state 452

    iteration_statement  ->  FOR '(' declaration expression_statement . expression ')' statement   (rule 286)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 489



state 453

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 284)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 285)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    ')' 	shift, and go to state 490
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 491



state 454

    selector  ->  IDENTIFIER ':' .   (rule 11)

    $default	reduce using rule 11 (selector)



state 455

    selector  ->  selector ':' .   (rule 12)

    $default	reduce using rule 12 (selector)



state 456

    primary_expression  ->  AT_SELECTOR '(' selector ')' .   (rule 19)

    $default	reduce using rule 19 (primary_expression)



state 457

    primary_expression  ->  AT_ENCODE '(' type_name ')' .   (rule 20)

    $default	reduce using rule 20 (primary_expression)



state 458

    cast_expression  ->  '(' type_name ')' '{' . struct_component_expression '}'   (rule 45)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    struct_component_expression	go to state 492
    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 493



state 459

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 44)

    $default	reduce using rule 44 (cast_expression)



state 460

    selector_with_arguments  ->  IDENTIFIER ':' . expression   (rule 4)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 494



state 461

    selector_component  ->  IDENTIFIER . ':'   (rule 1)

    ':' 	shift, and go to state 495



state 462

    selector_component  ->  ':' .   (rule 2)

    $default	reduce using rule 2 (selector_component)



state 463

    selector_with_arguments  ->  selector_with_arguments ',' . ELLIPSIS   (rule 6)

    ELLIPSIS	shift, and go to state 496



state 464

    primary_expression  ->  '[' expression selector_with_arguments ']' .   (rule 18)

    $default	reduce using rule 18 (primary_expression)



state 465

    selector_with_arguments  ->  selector_with_arguments selector_component . expression   (rule 5)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 497



state 466

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 30)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 498



state 467

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 24)

    $default	reduce using rule 24 (postfix_expression)



state 468

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 22)

    $default	reduce using rule 22 (postfix_expression)



state 469

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 75)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 499



state 470

    direct_abstract_declarator  ->  '(' parameter_type_list ')' .   (rule 250)

    $default	reduce using rule 250 (direct_abstract_declarator)



state 471

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 244)

    $default	reduce using rule 244 (direct_abstract_declarator)



state 472

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 246)

    $default	reduce using rule 246 (direct_abstract_declarator)



state 473

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 251)

    $default	reduce using rule 251 (direct_abstract_declarator)



state 474

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list . ')'   (rule 252)

    ')' 	shift, and go to state 500



state 475

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 247)

    $default	reduce using rule 247 (direct_abstract_declarator)



state 476

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression . ']'   (rule 248)

    ']' 	shift, and go to state 501



state 477

    class_name_declaration  ->  class_with_superclass '<' inherited_protocols '>' '(' category_name . ')'   (rule 101)

    ')' 	shift, and go to state 502



state 478

    selector_with_argument_declaration  ->  IDENTIFIER .   (rule 113)
    selector_with_argument_declaration  ->  IDENTIFIER . ':' selector_argument_declaration   (rule 114)

    ':' 	shift, and go to state 503

    ':' 	[reduce using rule 113 (selector_with_argument_declaration)]
    $default	reduce using rule 113 (selector_with_argument_declaration)



state 479

    selector_with_argument_declaration  ->  selector_with_argument_declaration . selector_component selector_argument_declaration   (rule 115)
    selector_with_argument_declaration  ->  selector_with_argument_declaration . ',' ELLIPSIS   (rule 116)
    method_declaration  ->  class_or_instance_method_specifier '(' objc_declaration_specifiers ')' selector_with_argument_declaration .   (rule 117)

    IDENTIFIER	shift, and go to state 461
    ':' 	shift, and go to state 462
    ',' 	shift, and go to state 504

    $default	reduce using rule 117 (method_declaration)

    selector_component	go to state 505



state 480

    initializer  ->  '{' initializer_list ',' '}' .   (rule 255)

    $default	reduce using rule 255 (initializer)



state 481

    initializer_list  ->  initializer_list ',' initializer .   (rule 257)

    $default	reduce using rule 257 (initializer_list)



state 482

    property_attributes_list  ->  IDENTIFIER ',' property_attributes_list .   (rule 185)

    $default	reduce using rule 185 (property_attributes_list)



state 483

    struct_declaration  ->  AT_PROPERTY '(' property_attributes_list ')' specifier_qualifier_list . struct_declarator_list ';'   (rule 190)

    IDENTIFIER	shift, and go to state 1
    ':' 	shift, and go to state 248
    '(' 	shift, and go to state 33
    '*' 	shift, and go to state 34

    struct_declarator_list	go to state 506
    struct_declarator	go to state 250
    declarator	go to state 251
    direct_declarator	go to state 45
    pointer	go to state 46



state 484

    selection_statement  ->  IF '(' expression ')' statement .   (rule 279)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 280)

    ELSE	shift, and go to state 507

    ELSE	[reduce using rule 279 (selection_statement)]
    $default	reduce using rule 279 (selection_statement)



state 485

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 281)

    $default	reduce using rule 281 (selection_statement)



state 486

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 282)

    $default	reduce using rule 282 (iteration_statement)



state 487

    expression  ->  expression . ',' assignment_expression   (rule 90)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 283)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 508



state 488

    expression  ->  expression . ',' assignment_expression   (rule 90)
    iteration_statement  ->  FOR '(' declaration IN expression . ')' statement   (rule 287)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 509



state 489

    expression  ->  expression . ',' assignment_expression   (rule 90)
    iteration_statement  ->  FOR '(' declaration expression_statement expression . ')' statement   (rule 286)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 510



state 490

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 284)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 511
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 491

    expression  ->  expression . ',' assignment_expression   (rule 90)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 285)

    ',' 	shift, and go to state 315
    ')' 	shift, and go to state 512



state 492

    struct_component_expression  ->  struct_component_expression . conditional_expression   (rule 8)
    cast_expression  ->  '(' type_name ')' '{' struct_component_expression . '}'   (rule 45)

    IDENTIFIER	shift, and go to state 199
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '}' 	shift, and go to state 513

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 201
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 514



state 493

    struct_component_expression  ->  conditional_expression .   (rule 7)

    $default	reduce using rule 7 (struct_component_expression)



state 494

    selector_with_arguments  ->  IDENTIFIER ':' expression .   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 90)

    ',' 	shift, and go to state 315

    ',' 	[reduce using rule 4 (selector_with_arguments)]
    $default	reduce using rule 4 (selector_with_arguments)



state 495

    selector_component  ->  IDENTIFIER ':' .   (rule 1)

    $default	reduce using rule 1 (selector_component)



state 496

    selector_with_arguments  ->  selector_with_arguments ',' ELLIPSIS .   (rule 6)

    $default	reduce using rule 6 (selector_with_arguments)



state 497

    selector_with_arguments  ->  selector_with_arguments selector_component expression .   (rule 5)
    expression  ->  expression . ',' assignment_expression   (rule 90)

    ',' 	shift, and go to state 315

    ',' 	[reduce using rule 5 (selector_with_arguments)]
    $default	reduce using rule 5 (selector_with_arguments)



state 498

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 30)

    $default	reduce using rule 30 (argument_expression_list)



state 499

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 75)

    $default	reduce using rule 75 (conditional_expression)



state 500

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list ')' .   (rule 252)

    $default	reduce using rule 252 (direct_abstract_declarator)



state 501

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression ']' .   (rule 248)

    $default	reduce using rule 248 (direct_abstract_declarator)



state 502

    class_name_declaration  ->  class_with_superclass '<' inherited_protocols '>' '(' category_name ')' .   (rule 101)

    $default	reduce using rule 101 (class_name_declaration)



state 503

    selector_with_argument_declaration  ->  IDENTIFIER ':' . selector_argument_declaration   (rule 114)

    '(' 	shift, and go to state 515

    selector_argument_declaration	go to state 516



state 504

    selector_with_argument_declaration  ->  selector_with_argument_declaration ',' . ELLIPSIS   (rule 116)

    ELLIPSIS	shift, and go to state 517



state 505

    selector_with_argument_declaration  ->  selector_with_argument_declaration selector_component . selector_argument_declaration   (rule 115)

    '(' 	shift, and go to state 515

    selector_argument_declaration	go to state 518



state 506

    struct_declaration  ->  AT_PROPERTY '(' property_attributes_list ')' specifier_qualifier_list struct_declarator_list . ';'   (rule 190)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 200)

    ',' 	shift, and go to state 367
    ';' 	shift, and go to state 519



state 507

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 280)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 520
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 508

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 283)

    ';' 	shift, and go to state 521



state 509

    iteration_statement  ->  FOR '(' declaration IN expression ')' . statement   (rule 287)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 522
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 510

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' . statement   (rule 286)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 523
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 511

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 284)

    $default	reduce using rule 284 (iteration_statement)



state 512

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 285)

    IDENTIFIER	shift, and go to state 130
    CONSTANT	shift, and go to state 131
    STRING_LITERAL	shift, and go to state 132
    SIZEOF	shift, and go to state 133
    INC_OP	shift, and go to state 134
    DEC_OP	shift, and go to state 135
    CASE	shift, and go to state 136
    DEFAULT	shift, and go to state 137
    IF  	shift, and go to state 138
    SWITCH	shift, and go to state 139
    WHILE	shift, and go to state 140
    DO  	shift, and go to state 141
    FOR 	shift, and go to state 142
    GOTO	shift, and go to state 143
    CONTINUE	shift, and go to state 144
    BREAK	shift, and go to state 145
    RETURN	shift, and go to state 146
    AT_STRING_LITERAL	shift, and go to state 147
    AT_SELECTOR	shift, and go to state 148
    AT_ENCODE	shift, and go to state 149
    AT_CATCH	shift, and go to state 150
    AT_TRY	shift, and go to state 151
    '(' 	shift, and go to state 152
    '[' 	shift, and go to state 153
    '&' 	shift, and go to state 154
    '*' 	shift, and go to state 155
    '+' 	shift, and go to state 156
    '-' 	shift, and go to state 157
    '~' 	shift, and go to state 158
    '!' 	shift, and go to state 159
    '{' 	shift, and go to state 74
    ';' 	shift, and go to state 161

    primary_expression	go to state 162
    postfix_expression	go to state 163
    unary_expression	go to state 164
    unary_operator	go to state 165
    cast_expression	go to state 166
    multiplicative_expression	go to state 167
    additive_expression	go to state 168
    shift_expression	go to state 169
    relational_expression	go to state 170
    equality_expression	go to state 171
    and_expression	go to state 172
    exclusive_or_expression	go to state 173
    inclusive_or_expression	go to state 174
    logical_and_expression	go to state 175
    logical_or_expression	go to state 176
    conditional_expression	go to state 177
    assignment_expression	go to state 178
    expression	go to state 179
    statement	go to state 524
    labeled_statement	go to state 181
    compound_statement	go to state 182
    expression_statement	go to state 185
    selection_statement	go to state 186
    iteration_statement	go to state 187
    jump_statement	go to state 188



state 513

    cast_expression  ->  '(' type_name ')' '{' struct_component_expression '}' .   (rule 45)

    $default	reduce using rule 45 (cast_expression)



state 514

    struct_component_expression  ->  struct_component_expression conditional_expression .   (rule 8)

    $default	reduce using rule 8 (struct_component_expression)



state 515

    selector_argument_declaration  ->  '(' . objc_declaration_specifiers ')' IDENTIFIER   (rule 112)

    TYPE_NAME	shift, and go to state 2
    CHAR	shift, and go to state 8
    SHORT	shift, and go to state 9
    INT 	shift, and go to state 10
    LONG	shift, and go to state 11
    SIGNED	shift, and go to state 12
    UNSIGNED	shift, and go to state 13
    FLOAT	shift, and go to state 14
    DOUBLE	shift, and go to state 15
    CONST	shift, and go to state 16
    VOLATILE	shift, and go to state 17
    VOID	shift, and go to state 18
    STRUCT	shift, and go to state 19
    UNION	shift, and go to state 20
    ENUM	shift, and go to state 21
    ID  	shift, and go to state 22
    SEL 	shift, and go to state 23
    BOOL	shift, and go to state 24
    UNICHAR	shift, and go to state 25
    CLASS	shift, and go to state 26
    IN  	shift, and go to state 340
    OUT 	shift, and go to state 341
    INOUT	shift, and go to state 342
    BYREF	shift, and go to state 343
    BYCOPY	shift, and go to state 344
    ONEWAY	shift, and go to state 345
    WEAK	shift, and go to state 31
    STRONG	shift, and go to state 32

    do_atribute_specifier	go to state 346
    objc_declaration_specifiers	go to state 525
    type_specifier	go to state 125
    struct_or_union_specifier	go to state 40
    struct_or_union	go to state 41
    specifier_qualifier_list	go to state 274
    enum_specifier	go to state 42
    type_qualifier	go to state 129
    type_name	go to state 348



state 516

    selector_with_argument_declaration  ->  IDENTIFIER ':' selector_argument_declaration .   (rule 114)

    $default	reduce using rule 114 (selector_with_argument_declaration)



state 517

    selector_with_argument_declaration  ->  selector_with_argument_declaration ',' ELLIPSIS .   (rule 116)

    $default	reduce using rule 116 (selector_with_argument_declaration)



state 518

    selector_with_argument_declaration  ->  selector_with_argument_declaration selector_component selector_argument_declaration .   (rule 115)

    $default	reduce using rule 115 (selector_with_argument_declaration)



state 519

    struct_declaration  ->  AT_PROPERTY '(' property_attributes_list ')' specifier_qualifier_list struct_declarator_list ';' .   (rule 190)

    $default	reduce using rule 190 (struct_declaration)



state 520

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 280)

    $default	reduce using rule 280 (selection_statement)



state 521

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 283)

    $default	reduce using rule 283 (iteration_statement)



state 522

    iteration_statement  ->  FOR '(' declaration IN expression ')' statement .   (rule 287)

    $default	reduce using rule 287 (iteration_statement)



state 523

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' statement .   (rule 286)

    $default	reduce using rule 286 (iteration_statement)



state 524

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 285)

    $default	reduce using rule 285 (iteration_statement)



state 525

    selector_argument_declaration  ->  '(' objc_declaration_specifiers . ')' IDENTIFIER   (rule 112)

    ')' 	shift, and go to state 526



state 526

    selector_argument_declaration  ->  '(' objc_declaration_specifiers ')' . IDENTIFIER   (rule 112)

    IDENTIFIER	shift, and go to state 527



state 527

    selector_argument_declaration  ->  '(' objc_declaration_specifiers ')' IDENTIFIER .   (rule 112)

    $default	reduce using rule 112 (selector_argument_declaration)



state 528

    $   	go to state 529



state 529

    $default	accept
